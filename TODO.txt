Multiresultset
	Text protocol
	Binary protocol (stored procedures)
Handshake
	sha256_password auth plugin: absence may cause BadUser tests to fail in 8.0
	SSL
	compression
Usability
	Connection quit
	Incomplete query reads: how does this affect further queries?
	Metadata in rows: being able to index by name
	Iterators for sync resultset iteration
	Consideration of timezones
	Types
		Decimal
		Bit
		Geometry
	UNIX socket connection
	connection::connect that handles TCP/Unix and MySQL connect
	connection::run_sql that hides the resultset concept
Consider if header-only is a good idea
Technical debt
	Concept checking
	Review async initiations
		See if async_initiate is applicable
		See if we can drop the dependence on beast
		See if we can just declare the functions as auto
		Test things with futures
	Review close() of the stream on error
	Review valid() for moved-from resultsets (should it return always true?)
	Force the same number of values in each row as in fields()
	CMake exporting?
	Integration test for network errors (e.g. host unreachable)
	Refactor file structucture for serialization and tests
	Deserialize common should be in namespace mysql::test, not in detail
	Take fetch_many() algorithm out into network_algorithms (e.g. read_many_rows)
	Rename (De)SerializationContext
	Test zero dates
	clear_errors() function to clear error_info and error_code at once
	Review .hpp/.ipp convention
	Make all sync/async tests use the network test suite
	Rework deserialize_row_fn to allow cursors
	Test prepared statement binding to procedure out params
	More thorough testing for several NULLs in integration testing
	Query and statement tests for DELETEs
	prepared_statement::execute(): static_assert(), handle value&, const value&, anything convertible
	Test for too many connections: do we have a buffer overrun there? (error msg shows incomplete)
	Add a connection quit in integ tests: they may fail under Windows otherwise