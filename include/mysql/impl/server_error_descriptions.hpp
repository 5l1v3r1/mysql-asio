#ifndef MYSQL_ASIO_IMPL_SERVER_ERROR_DESCRIPTIONS_HPP
#define MYSQL_ASIO_IMPL_SERVER_ERROR_DESCRIPTIONS_HPP

case Error::no: return "no";
case Error::yes: return "yes";
case Error::cant_create_file: return "cant_create_file";
case Error::cant_create_table: return "cant_create_table";
case Error::cant_create_db: return "cant_create_db";
case Error::db_create_exists: return "db_create_exists";
case Error::db_drop_exists: return "db_drop_exists";
case Error::db_drop_rmdir: return "db_drop_rmdir";
case Error::cant_find_system_rec: return "cant_find_system_rec";
case Error::cant_get_stat: return "cant_get_stat";
case Error::cant_lock: return "cant_lock";
case Error::cant_open_file: return "cant_open_file";
case Error::file_not_found: return "file_not_found";
case Error::cant_read_dir: return "cant_read_dir";
case Error::checkread: return "checkread";
case Error::dup_key: return "dup_key";
case Error::error_on_read: return "error_on_read";
case Error::error_on_rename: return "error_on_rename";
case Error::error_on_write: return "error_on_write";
case Error::file_used: return "file_used";
case Error::filsort_abort: return "filsort_abort";
case Error::get_errno: return "get_errno";
case Error::illegal_ha: return "illegal_ha";
case Error::key_not_found: return "key_not_found";
case Error::not_form_file: return "not_form_file";
case Error::not_keyfile: return "not_keyfile";
case Error::old_keyfile: return "old_keyfile";
case Error::open_as_readonly: return "open_as_readonly";
case Error::outofmemory: return "outofmemory";
case Error::out_of_sortmemory: return "out_of_sortmemory";
case Error::con_count_error: return "con_count_error";
case Error::out_of_resources: return "out_of_resources";
case Error::bad_host_error: return "bad_host_error";
case Error::handshake_error: return "handshake_error";
case Error::dbaccess_denied_error: return "dbaccess_denied_error";
case Error::access_denied_error: return "access_denied_error";
case Error::no_db_error: return "no_db_error";
case Error::unknown_com_error: return "unknown_com_error";
case Error::bad_null_error: return "bad_null_error";
case Error::bad_db_error: return "bad_db_error";
case Error::table_exists_error: return "table_exists_error";
case Error::bad_table_error: return "bad_table_error";
case Error::non_uniq_error: return "non_uniq_error";
case Error::server_shutdown: return "server_shutdown";
case Error::bad_field_error: return "bad_field_error";
case Error::wrong_field_with_group: return "wrong_field_with_group";
case Error::wrong_group_field: return "wrong_group_field";
case Error::wrong_sum_select: return "wrong_sum_select";
case Error::wrong_value_count: return "wrong_value_count";
case Error::too_long_ident: return "too_long_ident";
case Error::dup_fieldname: return "dup_fieldname";
case Error::dup_keyname: return "dup_keyname";
case Error::dup_entry: return "dup_entry";
case Error::wrong_field_spec: return "wrong_field_spec";
case Error::parse_error: return "parse_error";
case Error::empty_query: return "empty_query";
case Error::nonuniq_table: return "nonuniq_table";
case Error::invalid_default: return "invalid_default";
case Error::multiple_pri_key: return "multiple_pri_key";
case Error::too_many_keys: return "too_many_keys";
case Error::too_many_key_parts: return "too_many_key_parts";
case Error::too_long_key: return "too_long_key";
case Error::key_column_does_not_exits: return "key_column_does_not_exits";
case Error::blob_used_as_key: return "blob_used_as_key";
case Error::too_big_fieldlength: return "too_big_fieldlength";
case Error::wrong_auto_key: return "wrong_auto_key";
case Error::ready: return "ready";
case Error::shutdown_complete: return "shutdown_complete";
case Error::forcing_close: return "forcing_close";
case Error::ipsock_error: return "ipsock_error";
case Error::no_such_index: return "no_such_index";
case Error::wrong_field_terminators: return "wrong_field_terminators";
case Error::blobs_and_no_terminated: return "blobs_and_no_terminated";
case Error::textfile_not_readable: return "textfile_not_readable";
case Error::file_exists_error: return "file_exists_error";
case Error::load_info: return "load_info";
case Error::alter_info: return "alter_info";
case Error::wrong_sub_key: return "wrong_sub_key";
case Error::cant_remove_all_fields: return "cant_remove_all_fields";
case Error::cant_drop_field_or_key: return "cant_drop_field_or_key";
case Error::insert_info: return "insert_info";
case Error::update_table_used: return "update_table_used";
case Error::no_such_thread: return "no_such_thread";
case Error::kill_denied_error: return "kill_denied_error";
case Error::no_tables_used: return "no_tables_used";
case Error::too_big_set: return "too_big_set";
case Error::no_unique_logfile: return "no_unique_logfile";
case Error::table_not_locked_for_write: return "table_not_locked_for_write";
case Error::table_not_locked: return "table_not_locked";
case Error::blob_cant_have_default: return "blob_cant_have_default";
case Error::wrong_db_name: return "wrong_db_name";
case Error::wrong_table_name: return "wrong_table_name";
case Error::too_big_select: return "too_big_select";
case Error::unknown_error: return "unknown_error";
case Error::unknown_procedure: return "unknown_procedure";
case Error::wrong_paramcount_to_procedure: return "wrong_paramcount_to_procedure";
case Error::wrong_parameters_to_procedure: return "wrong_parameters_to_procedure";
case Error::unknown_table: return "unknown_table";
case Error::field_specified_twice: return "field_specified_twice";
case Error::invalid_group_func_use: return "invalid_group_func_use";
case Error::unsupported_extension: return "unsupported_extension";
case Error::table_must_have_columns: return "table_must_have_columns";
case Error::record_file_full: return "record_file_full";
case Error::unknown_character_set: return "unknown_character_set";
case Error::too_many_tables: return "too_many_tables";
case Error::too_many_fields: return "too_many_fields";
case Error::too_big_rowsize: return "too_big_rowsize";
case Error::stack_overrun: return "stack_overrun";
case Error::wrong_outer_join_unused: return "wrong_outer_join_unused";
case Error::null_column_in_index: return "null_column_in_index";
case Error::cant_find_udf: return "cant_find_udf";
case Error::cant_initialize_udf: return "cant_initialize_udf";
case Error::udf_no_paths: return "udf_no_paths";
case Error::udf_exists: return "udf_exists";
case Error::cant_open_library: return "cant_open_library";
case Error::cant_find_dl_entry: return "cant_find_dl_entry";
case Error::function_not_defined: return "function_not_defined";
case Error::host_is_blocked: return "host_is_blocked";
case Error::host_not_privileged: return "host_not_privileged";
case Error::password_anonymous_user: return "password_anonymous_user";
case Error::password_not_allowed: return "password_not_allowed";
case Error::password_no_match: return "password_no_match";
case Error::update_info: return "update_info";
case Error::cant_create_thread: return "cant_create_thread";
case Error::wrong_value_count_on_row: return "wrong_value_count_on_row";
case Error::cant_reopen_table: return "cant_reopen_table";
case Error::invalid_use_of_null: return "invalid_use_of_null";
case Error::regexp_error: return "regexp_error";
case Error::mix_of_group_func_and_fields: return "mix_of_group_func_and_fields";
case Error::nonexisting_grant: return "nonexisting_grant";
case Error::tableaccess_denied_error: return "tableaccess_denied_error";
case Error::columnaccess_denied_error: return "columnaccess_denied_error";
case Error::illegal_grant_for_table: return "illegal_grant_for_table";
case Error::grant_wrong_host_or_user: return "grant_wrong_host_or_user";
case Error::no_such_table: return "no_such_table";
case Error::nonexisting_table_grant: return "nonexisting_table_grant";
case Error::not_allowed_command: return "not_allowed_command";
case Error::syntax_error: return "syntax_error";
case Error::aborting_connection: return "aborting_connection";
case Error::net_packet_too_large: return "net_packet_too_large";
case Error::net_read_error_from_pipe: return "net_read_error_from_pipe";
case Error::net_fcntl_error: return "net_fcntl_error";
case Error::net_packets_out_of_order: return "net_packets_out_of_order";
case Error::net_uncompress_error: return "net_uncompress_error";
case Error::net_read_error: return "net_read_error";
case Error::net_read_interrupted: return "net_read_interrupted";
case Error::net_error_on_write: return "net_error_on_write";
case Error::net_write_interrupted: return "net_write_interrupted";
case Error::too_long_string: return "too_long_string";
case Error::table_cant_handle_blob: return "table_cant_handle_blob";
case Error::table_cant_handle_auto_increment: return "table_cant_handle_auto_increment";
case Error::wrong_column_name: return "wrong_column_name";
case Error::wrong_key_column: return "wrong_key_column";
case Error::wrong_mrg_table: return "wrong_mrg_table";
case Error::dup_unique: return "dup_unique";
case Error::blob_key_without_length: return "blob_key_without_length";
case Error::primary_cant_have_null: return "primary_cant_have_null";
case Error::too_many_rows: return "too_many_rows";
case Error::requires_primary_key: return "requires_primary_key";
case Error::update_without_key_in_safe_mode: return "update_without_key_in_safe_mode";
case Error::key_does_not_exits: return "key_does_not_exits";
case Error::check_no_such_table: return "check_no_such_table";
case Error::check_not_implemented: return "check_not_implemented";
case Error::cant_do_this_during_an_transaction: return "cant_do_this_during_an_transaction";
case Error::error_during_commit: return "error_during_commit";
case Error::error_during_rollback: return "error_during_rollback";
case Error::error_during_flush_logs: return "error_during_flush_logs";
case Error::new_aborting_connection: return "new_aborting_connection";
case Error::master: return "master";
case Error::master_net_read: return "master_net_read";
case Error::master_net_write: return "master_net_write";
case Error::ft_matching_key_not_found: return "ft_matching_key_not_found";
case Error::lock_or_active_transaction: return "lock_or_active_transaction";
case Error::unknown_system_variable: return "unknown_system_variable";
case Error::crashed_on_usage: return "crashed_on_usage";
case Error::crashed_on_repair: return "crashed_on_repair";
case Error::warning_not_complete_rollback: return "warning_not_complete_rollback";
case Error::trans_cache_full: return "trans_cache_full";
case Error::slave_not_running: return "slave_not_running";
case Error::bad_slave: return "bad_slave";
case Error::master_info: return "master_info";
case Error::slave_thread: return "slave_thread";
case Error::too_many_user_connections: return "too_many_user_connections";
case Error::set_constants_only: return "set_constants_only";
case Error::lock_wait_timeout: return "lock_wait_timeout";
case Error::lock_table_full: return "lock_table_full";
case Error::read_only_transaction: return "read_only_transaction";
case Error::wrong_arguments: return "wrong_arguments";
case Error::no_permission_to_create_user: return "no_permission_to_create_user";
case Error::lock_deadlock: return "lock_deadlock";
case Error::table_cant_handle_ft: return "table_cant_handle_ft";
case Error::cannot_add_foreign: return "cannot_add_foreign";
case Error::no_referenced_row: return "no_referenced_row";
case Error::row_is_referenced: return "row_is_referenced";
case Error::connect_to_master: return "connect_to_master";
case Error::error_when_executing_command: return "error_when_executing_command";
case Error::wrong_usage: return "wrong_usage";
case Error::wrong_number_of_columns_in_select: return "wrong_number_of_columns_in_select";
case Error::cant_update_with_readlock: return "cant_update_with_readlock";
case Error::mixing_not_allowed: return "mixing_not_allowed";
case Error::dup_argument: return "dup_argument";
case Error::user_limit_reached: return "user_limit_reached";
case Error::specific_access_denied_error: return "specific_access_denied_error";
case Error::local_variable: return "local_variable";
case Error::global_variable: return "global_variable";
case Error::no_default: return "no_default";
case Error::wrong_value_for_var: return "wrong_value_for_var";
case Error::wrong_type_for_var: return "wrong_type_for_var";
case Error::var_cant_be_read: return "var_cant_be_read";
case Error::cant_use_option_here: return "cant_use_option_here";
case Error::not_supported_yet: return "not_supported_yet";
case Error::master_fatal_error_reading_binlog: return "master_fatal_error_reading_binlog";
case Error::slave_ignored_table: return "slave_ignored_table";
case Error::incorrect_global_local_var: return "incorrect_global_local_var";
case Error::wrong_fk_def: return "wrong_fk_def";
case Error::key_ref_do_not_match_table_ref: return "key_ref_do_not_match_table_ref";
case Error::operand_columns: return "operand_columns";
case Error::subquery_no_1_row: return "subquery_no_1_row";
case Error::unknown_stmt_handler: return "unknown_stmt_handler";
case Error::corrupt_help_db: return "corrupt_help_db";
case Error::auto_convert: return "auto_convert";
case Error::illegal_reference: return "illegal_reference";
case Error::derived_must_have_alias: return "derived_must_have_alias";
case Error::select_reduced: return "select_reduced";
case Error::tablename_not_allowed_here: return "tablename_not_allowed_here";
case Error::not_supported_auth_mode: return "not_supported_auth_mode";
case Error::spatial_cant_have_null: return "spatial_cant_have_null";
case Error::collation_charset_mismatch: return "collation_charset_mismatch";
case Error::too_big_for_uncompress: return "too_big_for_uncompress";
case Error::zlib_z_mem_error: return "zlib_z_mem_error";
case Error::zlib_z_buf_error: return "zlib_z_buf_error";
case Error::zlib_z_data_error: return "zlib_z_data_error";
case Error::cut_value_group_concat: return "cut_value_group_concat";
case Error::warn_too_few_records: return "warn_too_few_records";
case Error::warn_too_many_records: return "warn_too_many_records";
case Error::warn_null_to_notnull: return "warn_null_to_notnull";
case Error::warn_data_out_of_range: return "warn_data_out_of_range";
case Error::warn_using_other_handler: return "warn_using_other_handler";
case Error::cant_aggregate_2collations: return "cant_aggregate_2collations";
case Error::revoke_grants: return "revoke_grants";
case Error::cant_aggregate_3collations: return "cant_aggregate_3collations";
case Error::cant_aggregate_ncollations: return "cant_aggregate_ncollations";
case Error::variable_is_not_struct: return "variable_is_not_struct";
case Error::unknown_collation: return "unknown_collation";
case Error::slave_ignored_ssl_params: return "slave_ignored_ssl_params";
case Error::warn_field_resolved: return "warn_field_resolved";
case Error::bad_slave_until_cond: return "bad_slave_until_cond";
case Error::missing_skip_slave: return "missing_skip_slave";
case Error::until_cond_ignored: return "until_cond_ignored";
case Error::wrong_name_for_index: return "wrong_name_for_index";
case Error::wrong_name_for_catalog: return "wrong_name_for_catalog";
case Error::bad_ft_column: return "bad_ft_column";
case Error::unknown_key_cache: return "unknown_key_cache";
case Error::warn_hostname_wont_work: return "warn_hostname_wont_work";
case Error::unknown_storage_engine: return "unknown_storage_engine";
case Error::warn_deprecated_syntax: return "warn_deprecated_syntax";
case Error::non_updatable_table: return "non_updatable_table";
case Error::feature_disabled: return "feature_disabled";
case Error::option_prevents_statement: return "option_prevents_statement";
case Error::duplicated_value_in_type: return "duplicated_value_in_type";
case Error::truncated_wrong_value: return "truncated_wrong_value";
case Error::invalid_on_update: return "invalid_on_update";
case Error::unsupported_ps: return "unsupported_ps";
case Error::get_errmsg: return "get_errmsg";
case Error::get_temporary_errmsg: return "get_temporary_errmsg";
case Error::unknown_time_zone: return "unknown_time_zone";
case Error::warn_invalid_timestamp: return "warn_invalid_timestamp";
case Error::invalid_character_string: return "invalid_character_string";
case Error::warn_allowed_packet_overflowed: return "warn_allowed_packet_overflowed";
case Error::conflicting_declarations: return "conflicting_declarations";
case Error::sp_no_recursive_create: return "sp_no_recursive_create";
case Error::sp_already_exists: return "sp_already_exists";
case Error::sp_does_not_exist: return "sp_does_not_exist";
case Error::sp_drop_failed: return "sp_drop_failed";
case Error::sp_store_failed: return "sp_store_failed";
case Error::sp_lilabel_mismatch: return "sp_lilabel_mismatch";
case Error::sp_label_redefine: return "sp_label_redefine";
case Error::sp_label_mismatch: return "sp_label_mismatch";
case Error::sp_uninit_var: return "sp_uninit_var";
case Error::sp_badselect: return "sp_badselect";
case Error::sp_badreturn: return "sp_badreturn";
case Error::sp_badstatement: return "sp_badstatement";
case Error::update_log_deprecated_ignored: return "update_log_deprecated_ignored";
case Error::update_log_deprecated_translated: return "update_log_deprecated_translated";
case Error::query_interrupted: return "query_interrupted";
case Error::sp_wrong_no_of_args: return "sp_wrong_no_of_args";
case Error::sp_cond_mismatch: return "sp_cond_mismatch";
case Error::sp_noreturn: return "sp_noreturn";
case Error::sp_noreturnend: return "sp_noreturnend";
case Error::sp_bad_cursor_query: return "sp_bad_cursor_query";
case Error::sp_bad_cursor_select: return "sp_bad_cursor_select";
case Error::sp_cursor_mismatch: return "sp_cursor_mismatch";
case Error::sp_cursor_already_open: return "sp_cursor_already_open";
case Error::sp_cursor_not_open: return "sp_cursor_not_open";
case Error::sp_undeclared_var: return "sp_undeclared_var";
case Error::sp_wrong_no_of_fetch_args: return "sp_wrong_no_of_fetch_args";
case Error::sp_fetch_no_data: return "sp_fetch_no_data";
case Error::sp_dup_param: return "sp_dup_param";
case Error::sp_dup_var: return "sp_dup_var";
case Error::sp_dup_cond: return "sp_dup_cond";
case Error::sp_dup_curs: return "sp_dup_curs";
case Error::sp_cant_alter: return "sp_cant_alter";
case Error::sp_subselect_nyi: return "sp_subselect_nyi";
case Error::stmt_not_allowed_in_sf_or_trg: return "stmt_not_allowed_in_sf_or_trg";
case Error::sp_varcond_after_curshndlr: return "sp_varcond_after_curshndlr";
case Error::sp_cursor_after_handler: return "sp_cursor_after_handler";
case Error::sp_case_not_found: return "sp_case_not_found";
case Error::fparser_too_big_file: return "fparser_too_big_file";
case Error::fparser_bad_header: return "fparser_bad_header";
case Error::fparser_eof_in_comment: return "fparser_eof_in_comment";
case Error::fparser_error_in_parameter: return "fparser_error_in_parameter";
case Error::fparser_eof_in_unknown_parameter: return "fparser_eof_in_unknown_parameter";
case Error::view_no_explain: return "view_no_explain";
case Error::wrong_object: return "wrong_object";
case Error::nonupdateable_column: return "nonupdateable_column";
case Error::view_select_clause: return "view_select_clause";
case Error::view_select_variable: return "view_select_variable";
case Error::view_select_tmptable: return "view_select_tmptable";
case Error::view_wrong_list: return "view_wrong_list";
case Error::warn_view_merge: return "warn_view_merge";
case Error::warn_view_without_key: return "warn_view_without_key";
case Error::view_invalid: return "view_invalid";
case Error::sp_no_drop_sp: return "sp_no_drop_sp";
case Error::trg_already_exists: return "trg_already_exists";
case Error::trg_does_not_exist: return "trg_does_not_exist";
case Error::trg_on_view_or_temp_table: return "trg_on_view_or_temp_table";
case Error::trg_cant_change_row: return "trg_cant_change_row";
case Error::trg_no_such_row_in_trg: return "trg_no_such_row_in_trg";
case Error::no_default_for_field: return "no_default_for_field";
case Error::division_by_zero: return "division_by_zero";
case Error::truncated_wrong_value_for_field: return "truncated_wrong_value_for_field";
case Error::illegal_value_for_type: return "illegal_value_for_type";
case Error::view_nonupd_check: return "view_nonupd_check";
case Error::view_check_failed: return "view_check_failed";
case Error::procaccess_denied_error: return "procaccess_denied_error";
case Error::relay_log_fail: return "relay_log_fail";
case Error::unknown_target_binlog: return "unknown_target_binlog";
case Error::io_err_log_index_read: return "io_err_log_index_read";
case Error::binlog_purge_prohibited: return "binlog_purge_prohibited";
case Error::fseek_fail: return "fseek_fail";
case Error::binlog_purge_fatal_err: return "binlog_purge_fatal_err";
case Error::log_in_use: return "log_in_use";
case Error::log_purge_unknown_err: return "log_purge_unknown_err";
case Error::relay_log_init: return "relay_log_init";
case Error::no_binary_logging: return "no_binary_logging";
case Error::reserved_syntax: return "reserved_syntax";
case Error::ps_many_param: return "ps_many_param";
case Error::key_part_0: return "key_part_0";
case Error::view_checksum: return "view_checksum";
case Error::view_multiupdate: return "view_multiupdate";
case Error::view_no_insert_field_list: return "view_no_insert_field_list";
case Error::view_delete_merge_view: return "view_delete_merge_view";
case Error::cannot_user: return "cannot_user";
case Error::xaer_nota: return "xaer_nota";
case Error::xaer_inval: return "xaer_inval";
case Error::xaer_rmfail: return "xaer_rmfail";
case Error::xaer_outside: return "xaer_outside";
case Error::xaer_rmerr: return "xaer_rmerr";
case Error::xa_rbrollback: return "xa_rbrollback";
case Error::nonexisting_proc_grant: return "nonexisting_proc_grant";
case Error::proc_auto_grant_fail: return "proc_auto_grant_fail";
case Error::proc_auto_revoke_fail: return "proc_auto_revoke_fail";
case Error::data_too_long: return "data_too_long";
case Error::sp_bad_sqlstate: return "sp_bad_sqlstate";
case Error::startup: return "startup";
case Error::load_from_fixed_size_rows_to_var: return "load_from_fixed_size_rows_to_var";
case Error::cant_create_user_with_grant: return "cant_create_user_with_grant";
case Error::wrong_value_for_type: return "wrong_value_for_type";
case Error::table_def_changed: return "table_def_changed";
case Error::sp_dup_handler: return "sp_dup_handler";
case Error::sp_not_var_arg: return "sp_not_var_arg";
case Error::sp_no_retset: return "sp_no_retset";
case Error::cant_create_geometry_object: return "cant_create_geometry_object";
case Error::binlog_unsafe_routine: return "binlog_unsafe_routine";
case Error::binlog_create_routine_need_super: return "binlog_create_routine_need_super";
case Error::stmt_has_no_open_cursor: return "stmt_has_no_open_cursor";
case Error::commit_not_allowed_in_sf_or_trg: return "commit_not_allowed_in_sf_or_trg";
case Error::no_default_for_view_field: return "no_default_for_view_field";
case Error::sp_no_recursion: return "sp_no_recursion";
case Error::too_big_scale: return "too_big_scale";
case Error::too_big_precision: return "too_big_precision";
case Error::m_bigger_than_d: return "m_bigger_than_d";
case Error::wrong_lock_of_system_table: return "wrong_lock_of_system_table";
case Error::connect_to_foreign_data_source: return "connect_to_foreign_data_source";
case Error::query_on_foreign_data_source: return "query_on_foreign_data_source";
case Error::foreign_data_source_doesnt_exist: return "foreign_data_source_doesnt_exist";
case Error::foreign_data_string_invalid_cant_create: return "foreign_data_string_invalid_cant_create";
case Error::foreign_data_string_invalid: return "foreign_data_string_invalid";
case Error::trg_in_wrong_schema: return "trg_in_wrong_schema";
case Error::stack_overrun_need_more: return "stack_overrun_need_more";
case Error::too_long_body: return "too_long_body";
case Error::warn_cant_drop_default_keycache: return "warn_cant_drop_default_keycache";
case Error::too_big_displaywidth: return "too_big_displaywidth";
case Error::xaer_dupid: return "xaer_dupid";
case Error::datetime_function_overflow: return "datetime_function_overflow";
case Error::cant_update_used_table_in_sf_or_trg: return "cant_update_used_table_in_sf_or_trg";
case Error::view_prevent_update: return "view_prevent_update";
case Error::ps_no_recursion: return "ps_no_recursion";
case Error::sp_cant_set_autocommit: return "sp_cant_set_autocommit";
case Error::view_frm_no_user: return "view_frm_no_user";
case Error::view_other_user: return "view_other_user";
case Error::no_such_user: return "no_such_user";
case Error::forbid_schema_change: return "forbid_schema_change";
case Error::row_is_referenced_2: return "row_is_referenced_2";
case Error::no_referenced_row_2: return "no_referenced_row_2";
case Error::sp_bad_var_shadow: return "sp_bad_var_shadow";
case Error::trg_no_definer: return "trg_no_definer";
case Error::old_file_format: return "old_file_format";
case Error::sp_recursion_limit: return "sp_recursion_limit";
case Error::sp_wrong_name: return "sp_wrong_name";
case Error::table_needs_upgrade: return "table_needs_upgrade";
case Error::sp_no_aggregate: return "sp_no_aggregate";
case Error::max_prepared_stmt_count_reached: return "max_prepared_stmt_count_reached";
case Error::view_recursive: return "view_recursive";
case Error::non_grouping_field_used: return "non_grouping_field_used";
case Error::table_cant_handle_spkeys: return "table_cant_handle_spkeys";
case Error::no_triggers_on_system_schema: return "no_triggers_on_system_schema";
case Error::removed_spaces: return "removed_spaces";
case Error::autoinc_read_failed: return "autoinc_read_failed";
case Error::username: return "username";
case Error::hostname: return "hostname";
case Error::wrong_string_length: return "wrong_string_length";
case Error::non_insertable_table: return "non_insertable_table";
case Error::admin_wrong_mrg_table: return "admin_wrong_mrg_table";
case Error::too_high_level_of_nesting_for_select: return "too_high_level_of_nesting_for_select";
case Error::name_becomes_empty: return "name_becomes_empty";
case Error::ambiguous_field_term: return "ambiguous_field_term";
case Error::foreign_server_exists: return "foreign_server_exists";
case Error::foreign_server_doesnt_exist: return "foreign_server_doesnt_exist";
case Error::illegal_ha_create_option: return "illegal_ha_create_option";
case Error::partition_requires_values_error: return "partition_requires_values_error";
case Error::partition_wrong_values_error: return "partition_wrong_values_error";
case Error::partition_maxvalue_error: return "partition_maxvalue_error";
case Error::partition_wrong_no_part_error: return "partition_wrong_no_part_error";
case Error::partition_wrong_no_subpart_error: return "partition_wrong_no_subpart_error";
case Error::wrong_expr_in_partition_func_error: return "wrong_expr_in_partition_func_error";
case Error::field_not_found_part_error: return "field_not_found_part_error";
case Error::inconsistent_partition_info_error: return "inconsistent_partition_info_error";
case Error::partition_func_not_allowed_error: return "partition_func_not_allowed_error";
case Error::partitions_must_be_defined_error: return "partitions_must_be_defined_error";
case Error::range_not_increasing_error: return "range_not_increasing_error";
case Error::inconsistent_type_of_functions_error: return "inconsistent_type_of_functions_error";
case Error::multiple_def_const_in_list_part_error: return "multiple_def_const_in_list_part_error";
case Error::partition_entry_error: return "partition_entry_error";
case Error::mix_handler_error: return "mix_handler_error";
case Error::partition_not_defined_error: return "partition_not_defined_error";
case Error::too_many_partitions_error: return "too_many_partitions_error";
case Error::subpartition_error: return "subpartition_error";
case Error::cant_create_handler_file: return "cant_create_handler_file";
case Error::blob_field_in_part_func_error: return "blob_field_in_part_func_error";
case Error::unique_key_need_all_fields_in_pf: return "unique_key_need_all_fields_in_pf";
case Error::no_parts_error: return "no_parts_error";
case Error::partition_mgmt_on_nonpartitioned: return "partition_mgmt_on_nonpartitioned";
case Error::foreign_key_on_partitioned: return "foreign_key_on_partitioned";
case Error::drop_partition_non_existent: return "drop_partition_non_existent";
case Error::drop_last_partition: return "drop_last_partition";
case Error::coalesce_only_on_hash_partition: return "coalesce_only_on_hash_partition";
case Error::reorg_hash_only_on_same_no: return "reorg_hash_only_on_same_no";
case Error::reorg_no_param_error: return "reorg_no_param_error";
case Error::only_on_range_list_partition: return "only_on_range_list_partition";
case Error::add_partition_subpart_error: return "add_partition_subpart_error";
case Error::add_partition_no_new_partition: return "add_partition_no_new_partition";
case Error::coalesce_partition_no_partition: return "coalesce_partition_no_partition";
case Error::reorg_partition_not_exist: return "reorg_partition_not_exist";
case Error::same_name_partition: return "same_name_partition";
case Error::no_binlog_error: return "no_binlog_error";
case Error::consecutive_reorg_partitions: return "consecutive_reorg_partitions";
case Error::reorg_outside_range: return "reorg_outside_range";
case Error::partition_function_failure: return "partition_function_failure";
case Error::limited_part_range: return "limited_part_range";
case Error::plugin_is_not_loaded: return "plugin_is_not_loaded";
case Error::wrong_value: return "wrong_value";
case Error::no_partition_for_given_value: return "no_partition_for_given_value";
case Error::filegroup_option_only_once: return "filegroup_option_only_once";
case Error::create_filegroup_failed: return "create_filegroup_failed";
case Error::drop_filegroup_failed: return "drop_filegroup_failed";
case Error::tablespace_auto_extend_error: return "tablespace_auto_extend_error";
case Error::wrong_size_number: return "wrong_size_number";
case Error::size_overflow_error: return "size_overflow_error";
case Error::alter_filegroup_failed: return "alter_filegroup_failed";
case Error::binlog_row_logging_failed: return "binlog_row_logging_failed";
case Error::event_already_exists: return "event_already_exists";
case Error::event_does_not_exist: return "event_does_not_exist";
case Error::event_interval_not_positive_or_too_big: return "event_interval_not_positive_or_too_big";
case Error::event_ends_before_starts: return "event_ends_before_starts";
case Error::event_exec_time_in_the_past: return "event_exec_time_in_the_past";
case Error::event_same_name: return "event_same_name";
case Error::drop_index_fk: return "drop_index_fk";
case Error::warn_deprecated_syntax_with_ver: return "warn_deprecated_syntax_with_ver";
case Error::cant_lock_log_table: return "cant_lock_log_table";
case Error::foreign_duplicate_key_old_unused: return "foreign_duplicate_key_old_unused";
case Error::col_count_doesnt_match_please_update: return "col_count_doesnt_match_please_update";
case Error::stored_function_prevents_switch_binlog_format: return "stored_function_prevents_switch_binlog_format";
case Error::partition_no_temporary: return "partition_no_temporary";
case Error::partition_const_domain_error: return "partition_const_domain_error";
case Error::partition_function_is_not_allowed: return "partition_function_is_not_allowed";
case Error::null_in_values_less_than: return "null_in_values_less_than";
case Error::wrong_partition_name: return "wrong_partition_name";
case Error::cant_change_tx_characteristics: return "cant_change_tx_characteristics";
case Error::dup_entry_autoincrement_case: return "dup_entry_autoincrement_case";
case Error::event_set_var_error: return "event_set_var_error";
case Error::partition_merge_error: return "partition_merge_error";
case Error::base64_decode_error: return "base64_decode_error";
case Error::event_recursion_forbidden: return "event_recursion_forbidden";
case Error::only_integers_allowed: return "only_integers_allowed";
case Error::unsuported_log_engine: return "unsuported_log_engine";
case Error::bad_log_statement: return "bad_log_statement";
case Error::cant_rename_log_table: return "cant_rename_log_table";
case Error::wrong_paramcount_to_native_fct: return "wrong_paramcount_to_native_fct";
case Error::wrong_parameters_to_native_fct: return "wrong_parameters_to_native_fct";
case Error::wrong_parameters_to_stored_fct: return "wrong_parameters_to_stored_fct";
case Error::native_fct_name_collision: return "native_fct_name_collision";
case Error::dup_entry_with_key_name: return "dup_entry_with_key_name";
case Error::binlog_purge_emfile: return "binlog_purge_emfile";
case Error::event_cannot_create_in_the_past: return "event_cannot_create_in_the_past";
case Error::event_cannot_alter_in_the_past: return "event_cannot_alter_in_the_past";
case Error::no_partition_for_given_value_silent: return "no_partition_for_given_value_silent";
case Error::binlog_unsafe_statement: return "binlog_unsafe_statement";
case Error::binlog_fatal_error: return "binlog_fatal_error";
case Error::binlog_logging_impossible: return "binlog_logging_impossible";
case Error::view_no_creation_ctx: return "view_no_creation_ctx";
case Error::view_invalid_creation_ctx: return "view_invalid_creation_ctx";
case Error::trg_corrupted_file: return "trg_corrupted_file";
case Error::trg_no_creation_ctx: return "trg_no_creation_ctx";
case Error::trg_invalid_creation_ctx: return "trg_invalid_creation_ctx";
case Error::event_invalid_creation_ctx: return "event_invalid_creation_ctx";
case Error::trg_cant_open_table: return "trg_cant_open_table";
case Error::no_format_description_event_before_binlog_statement: return "no_format_description_event_before_binlog_statement";
case Error::slave_corrupt_event: return "slave_corrupt_event";
case Error::log_purge_no_file: return "log_purge_no_file";
case Error::xa_rbtimeout: return "xa_rbtimeout";
case Error::xa_rbdeadlock: return "xa_rbdeadlock";
case Error::need_reprepare: return "need_reprepare";
case Error::plugin_delete_builtin: return "plugin_delete_builtin";
case Error::variable_is_readonly: return "variable_is_readonly";
case Error::warn_engine_transaction_rollback: return "warn_engine_transaction_rollback";
case Error::slave_heartbeat_value_out_of_range: return "slave_heartbeat_value_out_of_range";
case Error::ndb_replication_schema_error: return "ndb_replication_schema_error";
case Error::conflict_fn_parse_error: return "conflict_fn_parse_error";
case Error::exceptions_write_error: return "exceptions_write_error";
case Error::too_long_table_comment: return "too_long_table_comment";
case Error::too_long_field_comment: return "too_long_field_comment";
case Error::func_inexistent_name_collision: return "func_inexistent_name_collision";
case Error::database_name: return "database_name";
case Error::table_name: return "table_name";
case Error::partition_name: return "partition_name";
case Error::subpartition_name: return "subpartition_name";
case Error::temporary_name: return "temporary_name";
case Error::renamed_name: return "renamed_name";
case Error::too_many_concurrent_trxs: return "too_many_concurrent_trxs";
case Error::debug_sync_timeout: return "debug_sync_timeout";
case Error::debug_sync_hit_limit: return "debug_sync_hit_limit";
case Error::dup_signal_set: return "dup_signal_set";
case Error::signal_warn: return "signal_warn";
case Error::signal_not_found: return "signal_not_found";
case Error::signal_exception: return "signal_exception";
case Error::resignal_without_active_handler: return "resignal_without_active_handler";
case Error::signal_bad_condition_type: return "signal_bad_condition_type";
case Error::cond_item_too_long: return "cond_item_too_long";
case Error::unknown_locale: return "unknown_locale";
case Error::slave_ignore_server_ids: return "slave_ignore_server_ids";
case Error::same_name_partition_field: return "same_name_partition_field";
case Error::partition_column_list_error: return "partition_column_list_error";
case Error::wrong_type_column_value_error: return "wrong_type_column_value_error";
case Error::too_many_partition_func_fields_error: return "too_many_partition_func_fields_error";
case Error::maxvalue_in_values_in: return "maxvalue_in_values_in";
case Error::too_many_values_error: return "too_many_values_error";
case Error::row_single_partition_field_error: return "row_single_partition_field_error";
case Error::field_type_not_allowed_as_partition_field: return "field_type_not_allowed_as_partition_field";
case Error::partition_fields_too_long: return "partition_fields_too_long";
case Error::binlog_row_engine_and_stmt_engine: return "binlog_row_engine_and_stmt_engine";
case Error::binlog_row_mode_and_stmt_engine: return "binlog_row_mode_and_stmt_engine";
case Error::binlog_unsafe_and_stmt_engine: return "binlog_unsafe_and_stmt_engine";
case Error::binlog_row_injection_and_stmt_engine: return "binlog_row_injection_and_stmt_engine";
case Error::binlog_stmt_mode_and_row_engine: return "binlog_stmt_mode_and_row_engine";
case Error::binlog_row_injection_and_stmt_mode: return "binlog_row_injection_and_stmt_mode";
case Error::binlog_multiple_engines_and_self_logging_engine: return "binlog_multiple_engines_and_self_logging_engine";
case Error::binlog_unsafe_limit: return "binlog_unsafe_limit";
case Error::binlog_unsafe_system_table: return "binlog_unsafe_system_table";
case Error::binlog_unsafe_autoinc_columns: return "binlog_unsafe_autoinc_columns";
case Error::binlog_unsafe_udf: return "binlog_unsafe_udf";
case Error::binlog_unsafe_system_variable: return "binlog_unsafe_system_variable";
case Error::binlog_unsafe_system_function: return "binlog_unsafe_system_function";
case Error::binlog_unsafe_nontrans_after_trans: return "binlog_unsafe_nontrans_after_trans";
case Error::message_and_statement: return "message_and_statement";
case Error::slave_cant_create_conversion: return "slave_cant_create_conversion";
case Error::inside_transaction_prevents_switch_binlog_format: return "inside_transaction_prevents_switch_binlog_format";
case Error::path_length: return "path_length";
case Error::warn_deprecated_syntax_no_replacement: return "warn_deprecated_syntax_no_replacement";
case Error::wrong_native_table_structure: return "wrong_native_table_structure";
case Error::wrong_perfschema_usage: return "wrong_perfschema_usage";
case Error::warn_i_s_skipped_table: return "warn_i_s_skipped_table";
case Error::inside_transaction_prevents_switch_binlog_direct: return "inside_transaction_prevents_switch_binlog_direct";
case Error::stored_function_prevents_switch_binlog_direct: return "stored_function_prevents_switch_binlog_direct";
case Error::spatial_must_have_geom_col: return "spatial_must_have_geom_col";
case Error::too_long_index_comment: return "too_long_index_comment";
case Error::lock_aborted: return "lock_aborted";
case Error::data_out_of_range: return "data_out_of_range";
case Error::wrong_spvar_type_in_limit: return "wrong_spvar_type_in_limit";
case Error::binlog_unsafe_multiple_engines_and_self_logging_engine: return "binlog_unsafe_multiple_engines_and_self_logging_engine";
case Error::binlog_unsafe_mixed_statement: return "binlog_unsafe_mixed_statement";
case Error::inside_transaction_prevents_switch_sql_log_bin: return "inside_transaction_prevents_switch_sql_log_bin";
case Error::stored_function_prevents_switch_sql_log_bin: return "stored_function_prevents_switch_sql_log_bin";
case Error::failed_read_from_par_file: return "failed_read_from_par_file";
case Error::values_is_not_int_type_error: return "values_is_not_int_type_error";
case Error::access_denied_no_password_error: return "access_denied_no_password_error";
case Error::set_password_auth_plugin: return "set_password_auth_plugin";
case Error::truncate_illegal_fk: return "truncate_illegal_fk";
case Error::plugin_is_permanent: return "plugin_is_permanent";
case Error::slave_heartbeat_value_out_of_range_min: return "slave_heartbeat_value_out_of_range_min";
case Error::slave_heartbeat_value_out_of_range_max: return "slave_heartbeat_value_out_of_range_max";
case Error::stmt_cache_full: return "stmt_cache_full";
case Error::multi_update_key_conflict: return "multi_update_key_conflict";
case Error::table_needs_rebuild: return "table_needs_rebuild";
case Error::index_column_too_long: return "index_column_too_long";
case Error::error_in_trigger_body: return "error_in_trigger_body";
case Error::error_in_unknown_trigger_body: return "error_in_unknown_trigger_body";
case Error::index_corrupt: return "index_corrupt";
case Error::undo_record_too_big: return "undo_record_too_big";
case Error::binlog_unsafe_insert_ignore_select: return "binlog_unsafe_insert_ignore_select";
case Error::binlog_unsafe_insert_select_update: return "binlog_unsafe_insert_select_update";
case Error::binlog_unsafe_replace_select: return "binlog_unsafe_replace_select";
case Error::binlog_unsafe_create_ignore_select: return "binlog_unsafe_create_ignore_select";
case Error::binlog_unsafe_create_replace_select: return "binlog_unsafe_create_replace_select";
case Error::binlog_unsafe_update_ignore: return "binlog_unsafe_update_ignore";
case Error::plugin_no_uninstall: return "plugin_no_uninstall";
case Error::plugin_no_install: return "plugin_no_install";
case Error::binlog_unsafe_write_autoinc_select: return "binlog_unsafe_write_autoinc_select";
case Error::binlog_unsafe_create_select_autoinc: return "binlog_unsafe_create_select_autoinc";
case Error::binlog_unsafe_insert_two_keys: return "binlog_unsafe_insert_two_keys";
case Error::table_in_fk_check: return "table_in_fk_check";
case Error::unsupported_engine: return "unsupported_engine";
case Error::binlog_unsafe_autoinc_not_first: return "binlog_unsafe_autoinc_not_first";
case Error::cannot_load_from_table_v2: return "cannot_load_from_table_v2";
case Error::master_delay_value_out_of_range: return "master_delay_value_out_of_range";
case Error::only_fd_and_rbr_events_allowed_in_binlog_statement: return "only_fd_and_rbr_events_allowed_in_binlog_statement";
case Error::partition_exchange_different_option: return "partition_exchange_different_option";
case Error::partition_exchange_part_table: return "partition_exchange_part_table";
case Error::partition_exchange_temp_table: return "partition_exchange_temp_table";
case Error::partition_instead_of_subpartition: return "partition_instead_of_subpartition";
case Error::unknown_partition: return "unknown_partition";
case Error::tables_different_metadata: return "tables_different_metadata";
case Error::row_does_not_match_partition: return "row_does_not_match_partition";
case Error::binlog_cache_size_greater_than_max: return "binlog_cache_size_greater_than_max";
case Error::warn_index_not_applicable: return "warn_index_not_applicable";
case Error::partition_exchange_foreign_key: return "partition_exchange_foreign_key";
case Error::rpl_info_data_too_long: return "rpl_info_data_too_long";
case Error::binlog_stmt_cache_size_greater_than_max: return "binlog_stmt_cache_size_greater_than_max";
case Error::cant_update_table_in_create_table_select: return "cant_update_table_in_create_table_select";
case Error::partition_clause_on_nonpartitioned: return "partition_clause_on_nonpartitioned";
case Error::row_does_not_match_given_partition_set: return "row_does_not_match_given_partition_set";
case Error::change_rpl_info_repository_failure: return "change_rpl_info_repository_failure";
case Error::warning_not_complete_rollback_with_created_temp_table: return "warning_not_complete_rollback_with_created_temp_table";
case Error::warning_not_complete_rollback_with_dropped_temp_table: return "warning_not_complete_rollback_with_dropped_temp_table";
case Error::mts_feature_is_not_supported: return "mts_feature_is_not_supported";
case Error::mts_updated_dbs_greater_max: return "mts_updated_dbs_greater_max";
case Error::mts_cant_parallel: return "mts_cant_parallel";
case Error::mts_inconsistent_data: return "mts_inconsistent_data";
case Error::fulltext_not_supported_with_partitioning: return "fulltext_not_supported_with_partitioning";
case Error::da_invalid_condition_number: return "da_invalid_condition_number";
case Error::insecure_plain_text: return "insecure_plain_text";
case Error::insecure_change_master: return "insecure_change_master";
case Error::foreign_duplicate_key_with_child_info: return "foreign_duplicate_key_with_child_info";
case Error::foreign_duplicate_key_without_child_info: return "foreign_duplicate_key_without_child_info";
case Error::sqlthread_with_secure_slave: return "sqlthread_with_secure_slave";
case Error::table_has_no_ft: return "table_has_no_ft";
case Error::variable_not_settable_in_sf_or_trigger: return "variable_not_settable_in_sf_or_trigger";
case Error::variable_not_settable_in_transaction: return "variable_not_settable_in_transaction";
case Error::set_statement_cannot_invoke_function: return "set_statement_cannot_invoke_function";
case Error::gtid_next_cant_be_automatic_if_gtid_next_list_is_non_null: return "gtid_next_cant_be_automatic_if_gtid_next_list_is_non_null";
case Error::malformed_gtid_set_specification: return "malformed_gtid_set_specification";
case Error::malformed_gtid_set_encoding: return "malformed_gtid_set_encoding";
case Error::malformed_gtid_specification: return "malformed_gtid_specification";
case Error::gno_exhausted: return "gno_exhausted";
case Error::bad_slave_auto_position: return "bad_slave_auto_position";
case Error::auto_position_requires_gtid_mode_not_off: return "auto_position_requires_gtid_mode_not_off";
case Error::cant_do_implicit_commit_in_trx_when_gtid_next_is_set: return "cant_do_implicit_commit_in_trx_when_gtid_next_is_set";
case Error::gtid_mode_on_requires_enforce_gtid_consistency_on: return "gtid_mode_on_requires_enforce_gtid_consistency_on";
case Error::cant_set_gtid_next_to_gtid_when_gtid_mode_is_off: return "cant_set_gtid_next_to_gtid_when_gtid_mode_is_off";
case Error::cant_set_gtid_next_to_anonymous_when_gtid_mode_is_on: return "cant_set_gtid_next_to_anonymous_when_gtid_mode_is_on";
case Error::cant_set_gtid_next_list_to_non_null_when_gtid_mode_is_off: return "cant_set_gtid_next_list_to_non_null_when_gtid_mode_is_off";
case Error::gtid_unsafe_non_transactional_table: return "gtid_unsafe_non_transactional_table";
case Error::gtid_unsafe_create_select: return "gtid_unsafe_create_select";
case Error::gtid_mode_can_only_change_one_step_at_a_time: return "gtid_mode_can_only_change_one_step_at_a_time";
case Error::master_has_purged_required_gtids: return "master_has_purged_required_gtids";
case Error::cant_set_gtid_next_when_owning_gtid: return "cant_set_gtid_next_when_owning_gtid";
case Error::unknown_explain_format: return "unknown_explain_format";
case Error::cant_execute_in_read_only_transaction: return "cant_execute_in_read_only_transaction";
case Error::too_long_table_partition_comment: return "too_long_table_partition_comment";
case Error::slave_configuration: return "slave_configuration";
case Error::innodb_ft_limit: return "innodb_ft_limit";
case Error::innodb_no_ft_temp_table: return "innodb_no_ft_temp_table";
case Error::innodb_ft_wrong_docid_column: return "innodb_ft_wrong_docid_column";
case Error::innodb_ft_wrong_docid_index: return "innodb_ft_wrong_docid_index";
case Error::innodb_online_log_too_big: return "innodb_online_log_too_big";
case Error::unknown_alter_algorithm: return "unknown_alter_algorithm";
case Error::unknown_alter_lock: return "unknown_alter_lock";
case Error::mts_change_master_cant_run_with_gaps: return "mts_change_master_cant_run_with_gaps";
case Error::mts_recovery_failure: return "mts_recovery_failure";
case Error::mts_reset_workers: return "mts_reset_workers";
case Error::col_count_doesnt_match_corrupted_v2: return "col_count_doesnt_match_corrupted_v2";
case Error::slave_silent_retry_transaction: return "slave_silent_retry_transaction";
case Error::discard_fk_checks_running: return "discard_fk_checks_running";
case Error::table_schema_mismatch: return "table_schema_mismatch";
case Error::table_in_system_tablespace: return "table_in_system_tablespace";
case Error::io_read_error: return "io_read_error";
case Error::io_write_error: return "io_write_error";
case Error::tablespace_missing: return "tablespace_missing";
case Error::tablespace_exists: return "tablespace_exists";
case Error::tablespace_discarded: return "tablespace_discarded";
case Error::internal_error: return "internal_error";
case Error::innodb_import_error: return "innodb_import_error";
case Error::innodb_index_corrupt: return "innodb_index_corrupt";
case Error::invalid_year_column_length: return "invalid_year_column_length";
case Error::not_valid_password: return "not_valid_password";
case Error::must_change_password: return "must_change_password";
case Error::fk_no_index_child: return "fk_no_index_child";
case Error::fk_no_index_parent: return "fk_no_index_parent";
case Error::fk_fail_add_system: return "fk_fail_add_system";
case Error::fk_cannot_open_parent: return "fk_cannot_open_parent";
case Error::fk_incorrect_option: return "fk_incorrect_option";
case Error::fk_dup_name: return "fk_dup_name";
case Error::password_format: return "password_format";
case Error::fk_column_cannot_drop: return "fk_column_cannot_drop";
case Error::fk_column_cannot_drop_child: return "fk_column_cannot_drop_child";
case Error::fk_column_not_null: return "fk_column_not_null";
case Error::dup_index: return "dup_index";
case Error::fk_column_cannot_change: return "fk_column_cannot_change";
case Error::fk_column_cannot_change_child: return "fk_column_cannot_change_child";
case Error::malformed_packet: return "malformed_packet";
case Error::read_only_mode: return "read_only_mode";
case Error::gtid_next_type_undefined_gtid: return "gtid_next_type_undefined_gtid";
case Error::variable_not_settable_in_sp: return "variable_not_settable_in_sp";
case Error::cant_set_gtid_purged_when_gtid_executed_is_not_empty: return "cant_set_gtid_purged_when_gtid_executed_is_not_empty";
case Error::cant_set_gtid_purged_when_owned_gtids_is_not_empty: return "cant_set_gtid_purged_when_owned_gtids_is_not_empty";
case Error::gtid_purged_was_changed: return "gtid_purged_was_changed";
case Error::gtid_executed_was_changed: return "gtid_executed_was_changed";
case Error::binlog_stmt_mode_and_no_repl_tables: return "binlog_stmt_mode_and_no_repl_tables";
case Error::alter_operation_not_supported: return "alter_operation_not_supported";
case Error::alter_operation_not_supported_reason: return "alter_operation_not_supported_reason";
case Error::alter_operation_not_supported_reason_copy: return "alter_operation_not_supported_reason_copy";
case Error::alter_operation_not_supported_reason_partition: return "alter_operation_not_supported_reason_partition";
case Error::alter_operation_not_supported_reason_fk_rename: return "alter_operation_not_supported_reason_fk_rename";
case Error::alter_operation_not_supported_reason_column_type: return "alter_operation_not_supported_reason_column_type";
case Error::alter_operation_not_supported_reason_fk_check: return "alter_operation_not_supported_reason_fk_check";
case Error::alter_operation_not_supported_reason_nopk: return "alter_operation_not_supported_reason_nopk";
case Error::alter_operation_not_supported_reason_autoinc: return "alter_operation_not_supported_reason_autoinc";
case Error::alter_operation_not_supported_reason_hidden_fts: return "alter_operation_not_supported_reason_hidden_fts";
case Error::alter_operation_not_supported_reason_change_fts: return "alter_operation_not_supported_reason_change_fts";
case Error::alter_operation_not_supported_reason_fts: return "alter_operation_not_supported_reason_fts";
case Error::sql_slave_skip_counter_not_settable_in_gtid_mode: return "sql_slave_skip_counter_not_settable_in_gtid_mode";
case Error::dup_unknown_in_index: return "dup_unknown_in_index";
case Error::ident_causes_too_long_path: return "ident_causes_too_long_path";
case Error::alter_operation_not_supported_reason_not_null: return "alter_operation_not_supported_reason_not_null";
case Error::must_change_password_login: return "must_change_password_login";
case Error::row_in_wrong_partition: return "row_in_wrong_partition";
case Error::mts_event_bigger_pending_jobs_size_max: return "mts_event_bigger_pending_jobs_size_max";
case Error::binlog_logical_corruption: return "binlog_logical_corruption";
case Error::warn_purge_log_in_use: return "warn_purge_log_in_use";
case Error::warn_purge_log_is_active: return "warn_purge_log_is_active";
case Error::auto_increment_conflict: return "auto_increment_conflict";
case Error::slave_mi_init_repository: return "slave_mi_init_repository";
case Error::slave_rli_init_repository: return "slave_rli_init_repository";
case Error::access_denied_change_user_error: return "access_denied_change_user_error";
case Error::innodb_read_only: return "innodb_read_only";
case Error::stop_slave_sql_thread_timeout: return "stop_slave_sql_thread_timeout";
case Error::stop_slave_io_thread_timeout: return "stop_slave_io_thread_timeout";
case Error::table_corrupt: return "table_corrupt";
case Error::temp_file_write_failure: return "temp_file_write_failure";
case Error::innodb_ft_aux_not_hex_id: return "innodb_ft_aux_not_hex_id";
case Error::old_temporals_upgraded: return "old_temporals_upgraded";
case Error::innodb_forced_recovery: return "innodb_forced_recovery";
case Error::aes_invalid_iv: return "aes_invalid_iv";
case Error::plugin_cannot_be_uninstalled: return "plugin_cannot_be_uninstalled";
case Error::gtid_unsafe_binlog_splittable_statement_and_assigned_gtid: return "gtid_unsafe_binlog_splittable_statement_and_assigned_gtid";
case Error::slave_has_more_gtids_than_master: return "slave_has_more_gtids_than_master";
case Error::missing_key: return "missing_key";
case Error::file_corrupt: return "file_corrupt";
case Error::error_on_master: return "error_on_master";
case Error::storage_engine_not_loaded: return "storage_engine_not_loaded";
case Error::get_stacked_da_without_active_handler: return "get_stacked_da_without_active_handler";
case Error::warn_legacy_syntax_converted: return "warn_legacy_syntax_converted";
case Error::binlog_unsafe_fulltext_plugin: return "binlog_unsafe_fulltext_plugin";
case Error::cannot_discard_temporary_table: return "cannot_discard_temporary_table";
case Error::fk_depth_exceeded: return "fk_depth_exceeded";
case Error::col_count_doesnt_match_please_update_v2: return "col_count_doesnt_match_please_update_v2";
case Error::warn_trigger_doesnt_have_created: return "warn_trigger_doesnt_have_created";
case Error::referenced_trg_does_not_exist: return "referenced_trg_does_not_exist";
case Error::explain_not_supported: return "explain_not_supported";
case Error::invalid_field_size: return "invalid_field_size";
case Error::missing_ha_create_option: return "missing_ha_create_option";
case Error::engine_out_of_memory: return "engine_out_of_memory";
case Error::password_expire_anonymous_user: return "password_expire_anonymous_user";
case Error::slave_sql_thread_must_stop: return "slave_sql_thread_must_stop";
case Error::no_ft_materialized_subquery: return "no_ft_materialized_subquery";
case Error::innodb_undo_log_full: return "innodb_undo_log_full";
case Error::invalid_argument_for_logarithm: return "invalid_argument_for_logarithm";
case Error::slave_channel_io_thread_must_stop: return "slave_channel_io_thread_must_stop";
case Error::warn_open_temp_tables_must_be_zero: return "warn_open_temp_tables_must_be_zero";
case Error::warn_only_master_log_file_no_pos: return "warn_only_master_log_file_no_pos";
case Error::query_timeout: return "query_timeout";
case Error::non_ro_select_disable_timer: return "non_ro_select_disable_timer";
case Error::dup_list_entry: return "dup_list_entry";
case Error::aggregate_order_for_union: return "aggregate_order_for_union";
case Error::aggregate_order_non_agg_query: return "aggregate_order_non_agg_query";
case Error::slave_worker_stopped_previous_thd_error: return "slave_worker_stopped_previous_thd_error";
case Error::dont_support_slave_preserve_commit_order: return "dont_support_slave_preserve_commit_order";
case Error::server_offline_mode: return "server_offline_mode";
case Error::gis_different_srids: return "gis_different_srids";
case Error::gis_unsupported_argument: return "gis_unsupported_argument";
case Error::gis_unknown_error: return "gis_unknown_error";
case Error::gis_unknown_exception: return "gis_unknown_exception";
case Error::gis_invalid_data: return "gis_invalid_data";
case Error::boost_geometry_empty_input_exception: return "boost_geometry_empty_input_exception";
case Error::boost_geometry_centroid_exception: return "boost_geometry_centroid_exception";
case Error::boost_geometry_overlay_invalid_input_exception: return "boost_geometry_overlay_invalid_input_exception";
case Error::boost_geometry_turn_info_exception: return "boost_geometry_turn_info_exception";
case Error::boost_geometry_self_intersection_point_exception: return "boost_geometry_self_intersection_point_exception";
case Error::boost_geometry_unknown_exception: return "boost_geometry_unknown_exception";
case Error::std_bad_alloc_error: return "std_bad_alloc_error";
case Error::std_domain_error: return "std_domain_error";
case Error::std_length_error: return "std_length_error";
case Error::std_invalid_argument: return "std_invalid_argument";
case Error::std_out_of_range_error: return "std_out_of_range_error";
case Error::std_overflow_error: return "std_overflow_error";
case Error::std_range_error: return "std_range_error";
case Error::std_underflow_error: return "std_underflow_error";
case Error::std_logic_error: return "std_logic_error";
case Error::std_runtime_error: return "std_runtime_error";
case Error::std_unknown_exception: return "std_unknown_exception";
case Error::gis_data_wrong_endianess: return "gis_data_wrong_endianess";
case Error::change_master_password_length: return "change_master_password_length";
case Error::user_lock_wrong_name: return "user_lock_wrong_name";
case Error::user_lock_deadlock: return "user_lock_deadlock";
case Error::replace_inaccessible_rows: return "replace_inaccessible_rows";
case Error::alter_operation_not_supported_reason_gis: return "alter_operation_not_supported_reason_gis";
case Error::illegal_user_var: return "illegal_user_var";
case Error::gtid_mode_off: return "gtid_mode_off";
case Error::incorrect_type: return "incorrect_type";
case Error::field_in_order_not_select: return "field_in_order_not_select";
case Error::aggregate_in_order_not_select: return "aggregate_in_order_not_select";
case Error::invalid_rpl_wild_table_filter_pattern: return "invalid_rpl_wild_table_filter_pattern";
case Error::net_ok_packet_too_large: return "net_ok_packet_too_large";
case Error::invalid_json_data: return "invalid_json_data";
case Error::invalid_geojson_missing_member: return "invalid_geojson_missing_member";
case Error::invalid_geojson_wrong_type: return "invalid_geojson_wrong_type";
case Error::invalid_geojson_unspecified: return "invalid_geojson_unspecified";
case Error::dimension_unsupported: return "dimension_unsupported";
case Error::slave_channel_does_not_exist: return "slave_channel_does_not_exist";
case Error::slave_channel_name_invalid_or_too_long: return "slave_channel_name_invalid_or_too_long";
case Error::slave_new_channel_wrong_repository: return "slave_new_channel_wrong_repository";
case Error::slave_multiple_channels_cmd: return "slave_multiple_channels_cmd";
case Error::slave_max_channels_exceeded: return "slave_max_channels_exceeded";
case Error::slave_channel_must_stop: return "slave_channel_must_stop";
case Error::slave_channel_not_running: return "slave_channel_not_running";
case Error::slave_channel_was_running: return "slave_channel_was_running";
case Error::slave_channel_was_not_running: return "slave_channel_was_not_running";
case Error::slave_channel_sql_thread_must_stop: return "slave_channel_sql_thread_must_stop";
case Error::slave_channel_sql_skip_counter: return "slave_channel_sql_skip_counter";
case Error::wrong_field_with_group_v2: return "wrong_field_with_group_v2";
case Error::mix_of_group_func_and_fields_v2: return "mix_of_group_func_and_fields_v2";
case Error::warn_deprecated_sysvar_update: return "warn_deprecated_sysvar_update";
case Error::warn_deprecated_sqlmode: return "warn_deprecated_sqlmode";
case Error::cannot_log_partial_drop_database_with_gtid: return "cannot_log_partial_drop_database_with_gtid";
case Error::group_replication_configuration: return "group_replication_configuration";
case Error::group_replication_running: return "group_replication_running";
case Error::group_replication_applier_init_error: return "group_replication_applier_init_error";
case Error::group_replication_stop_applier_thread_timeout: return "group_replication_stop_applier_thread_timeout";
case Error::group_replication_communication_layer_session_error: return "group_replication_communication_layer_session_error";
case Error::group_replication_communication_layer_join_error: return "group_replication_communication_layer_join_error";
case Error::before_dml_validation_error: return "before_dml_validation_error";
case Error::prevents_variable_without_rbr: return "prevents_variable_without_rbr";
case Error::run_hook_error: return "run_hook_error";
case Error::transaction_rollback_during_commit: return "transaction_rollback_during_commit";
case Error::generated_column_function_is_not_allowed: return "generated_column_function_is_not_allowed";
case Error::unsupported_alter_inplace_on_virtual_column: return "unsupported_alter_inplace_on_virtual_column";
case Error::wrong_fk_option_for_generated_column: return "wrong_fk_option_for_generated_column";
case Error::non_default_value_for_generated_column: return "non_default_value_for_generated_column";
case Error::unsupported_action_on_generated_column: return "unsupported_action_on_generated_column";
case Error::generated_column_non_prior: return "generated_column_non_prior";
case Error::dependent_by_generated_column: return "dependent_by_generated_column";
case Error::generated_column_ref_auto_inc: return "generated_column_ref_auto_inc";
case Error::feature_not_available: return "feature_not_available";
case Error::cant_set_gtid_mode: return "cant_set_gtid_mode";
case Error::cant_use_auto_position_with_gtid_mode_off: return "cant_use_auto_position_with_gtid_mode_off";
case Error::cant_enforce_gtid_consistency_with_ongoing_gtid_violating_tx: return "cant_enforce_gtid_consistency_with_ongoing_gtid_violating_tx";
case Error::enforce_gtid_consistency_warn_with_ongoing_gtid_violating_tx: return "enforce_gtid_consistency_warn_with_ongoing_gtid_violating_tx";
case Error::account_has_been_locked: return "account_has_been_locked";
case Error::wrong_tablespace_name: return "wrong_tablespace_name";
case Error::tablespace_is_not_empty: return "tablespace_is_not_empty";
case Error::wrong_file_name: return "wrong_file_name";
case Error::boost_geometry_inconsistent_turns_exception: return "boost_geometry_inconsistent_turns_exception";
case Error::warn_optimizer_hint_syntax_error: return "warn_optimizer_hint_syntax_error";
case Error::warn_bad_max_execution_time: return "warn_bad_max_execution_time";
case Error::warn_unsupported_max_execution_time: return "warn_unsupported_max_execution_time";
case Error::warn_conflicting_hint: return "warn_conflicting_hint";
case Error::warn_unknown_qb_name: return "warn_unknown_qb_name";
case Error::unresolved_hint_name: return "unresolved_hint_name";
case Error::warn_on_modifying_gtid_executed_table: return "warn_on_modifying_gtid_executed_table";
case Error::pluggable_protocol_command_not_supported: return "pluggable_protocol_command_not_supported";
case Error::locking_service_wrong_name: return "locking_service_wrong_name";
case Error::locking_service_deadlock: return "locking_service_deadlock";
case Error::locking_service_timeout: return "locking_service_timeout";
case Error::gis_max_points_in_geometry_overflowed: return "gis_max_points_in_geometry_overflowed";
case Error::sql_mode_merged: return "sql_mode_merged";
case Error::vtoken_plugin_token_mismatch: return "vtoken_plugin_token_mismatch";
case Error::vtoken_plugin_token_not_found: return "vtoken_plugin_token_not_found";
case Error::cant_set_variable_when_owning_gtid: return "cant_set_variable_when_owning_gtid";
case Error::slave_channel_operation_not_allowed: return "slave_channel_operation_not_allowed";
case Error::invalid_json_text: return "invalid_json_text";
case Error::invalid_json_text_in_param: return "invalid_json_text_in_param";
case Error::invalid_json_binary_data: return "invalid_json_binary_data";
case Error::invalid_json_path: return "invalid_json_path";
case Error::invalid_json_charset: return "invalid_json_charset";
case Error::invalid_json_charset_in_function: return "invalid_json_charset_in_function";
case Error::invalid_type_for_json: return "invalid_type_for_json";
case Error::invalid_cast_to_json: return "invalid_cast_to_json";
case Error::invalid_json_path_charset: return "invalid_json_path_charset";
case Error::invalid_json_path_wildcard: return "invalid_json_path_wildcard";
case Error::json_value_too_big: return "json_value_too_big";
case Error::json_key_too_big: return "json_key_too_big";
case Error::json_used_as_key: return "json_used_as_key";
case Error::json_vacuous_path: return "json_vacuous_path";
case Error::json_bad_one_or_all_arg: return "json_bad_one_or_all_arg";
case Error::numeric_json_value_out_of_range: return "numeric_json_value_out_of_range";
case Error::invalid_json_value_for_cast: return "invalid_json_value_for_cast";
case Error::json_document_too_deep: return "json_document_too_deep";
case Error::json_document_null_key: return "json_document_null_key";
case Error::secure_transport_required: return "secure_transport_required";
case Error::no_secure_transports_configured: return "no_secure_transports_configured";
case Error::disabled_storage_engine: return "disabled_storage_engine";
case Error::user_does_not_exist: return "user_does_not_exist";
case Error::user_already_exists: return "user_already_exists";
case Error::audit_api_abort: return "audit_api_abort";
case Error::invalid_json_path_array_cell: return "invalid_json_path_array_cell";
case Error::bufpool_resize_inprogress: return "bufpool_resize_inprogress";
case Error::feature_disabled_see_doc: return "feature_disabled_see_doc";
case Error::server_isnt_available: return "server_isnt_available";
case Error::session_was_killed: return "session_was_killed";
case Error::capacity_exceeded: return "capacity_exceeded";
case Error::capacity_exceeded_in_range_optimizer: return "capacity_exceeded_in_range_optimizer";
case Error::cant_wait_for_executed_gtid_set_while_owning_a_gtid: return "cant_wait_for_executed_gtid_set_while_owning_a_gtid";
case Error::cannot_add_foreign_base_col_virtual: return "cannot_add_foreign_base_col_virtual";
case Error::cannot_create_virtual_index_constraint: return "cannot_create_virtual_index_constraint";
case Error::error_on_modifying_gtid_executed_table: return "error_on_modifying_gtid_executed_table";
case Error::lock_refused_by_engine: return "lock_refused_by_engine";
case Error::unsupported_alter_online_on_virtual_column: return "unsupported_alter_online_on_virtual_column";
case Error::master_key_rotation_not_supported_by_se: return "master_key_rotation_not_supported_by_se";
case Error::master_key_rotation_binlog_failed: return "master_key_rotation_binlog_failed";
case Error::master_key_rotation_se_unavailable: return "master_key_rotation_se_unavailable";
case Error::tablespace_cannot_encrypt: return "tablespace_cannot_encrypt";
case Error::invalid_encryption_option: return "invalid_encryption_option";
case Error::cannot_find_key_in_keyring: return "cannot_find_key_in_keyring";
case Error::capacity_exceeded_in_parser: return "capacity_exceeded_in_parser";
case Error::unsupported_alter_encryption_inplace: return "unsupported_alter_encryption_inplace";
case Error::keyring_udf_keyring_service_error: return "keyring_udf_keyring_service_error";
case Error::user_column_old_length: return "user_column_old_length";
case Error::cant_reset_master: return "cant_reset_master";
case Error::group_replication_max_group_size: return "group_replication_max_group_size";
case Error::cannot_add_foreign_base_col_stored: return "cannot_add_foreign_base_col_stored";
case Error::table_referenced: return "table_referenced";
case Error::xa_retry: return "xa_retry";
case Error::keyring_aws_udf_aws_kms_error: return "keyring_aws_udf_aws_kms_error";
case Error::binlog_unsafe_xa: return "binlog_unsafe_xa";
case Error::udf_error: return "udf_error";
case Error::keyring_migration_failure: return "keyring_migration_failure";
case Error::keyring_access_denied_error: return "keyring_access_denied_error";
case Error::keyring_migration_status: return "keyring_migration_status";
case Error::audit_log_udf_read_invalid_max_array_length_arg_value: return "audit_log_udf_read_invalid_max_array_length_arg_value";
case Error::unsupport_compressed_temporary_table: return "unsupport_compressed_temporary_table";
case Error::acl_operation_failed: return "acl_operation_failed";
case Error::unsupported_index_algorithm: return "unsupported_index_algorithm";
case Error::no_such_db: return "no_such_db";
case Error::too_big_enum: return "too_big_enum";
case Error::too_long_set_enum_value: return "too_long_set_enum_value";
case Error::invalid_dd_object: return "invalid_dd_object";
case Error::updating_dd_table: return "updating_dd_table";
case Error::invalid_dd_object_id: return "invalid_dd_object_id";
case Error::invalid_dd_object_name: return "invalid_dd_object_name";
case Error::tablespace_missing_with_name: return "tablespace_missing_with_name";
case Error::too_long_routine_comment: return "too_long_routine_comment";
case Error::sp_load_failed: return "sp_load_failed";
case Error::invalid_bitwise_operands_size: return "invalid_bitwise_operands_size";
case Error::invalid_bitwise_aggregate_operands_size: return "invalid_bitwise_aggregate_operands_size";
case Error::warn_unsupported_hint: return "warn_unsupported_hint";
case Error::unexpected_geometry_type: return "unexpected_geometry_type";
case Error::srs_parse_error: return "srs_parse_error";
case Error::srs_proj_parameter_missing: return "srs_proj_parameter_missing";
case Error::warn_srs_not_found: return "warn_srs_not_found";
case Error::srs_not_cartesian: return "srs_not_cartesian";
case Error::srs_not_cartesian_undefined: return "srs_not_cartesian_undefined";
case Error::pk_index_cant_be_invisible: return "pk_index_cant_be_invisible";
case Error::unknown_authid: return "unknown_authid";
case Error::failed_role_grant: return "failed_role_grant";
case Error::open_role_tables: return "open_role_tables";
case Error::failed_default_roles: return "failed_default_roles";
case Error::components_no_scheme: return "components_no_scheme";
case Error::components_no_scheme_service: return "components_no_scheme_service";
case Error::components_cant_load: return "components_cant_load";
case Error::role_not_granted: return "role_not_granted";
case Error::failed_revoke_role: return "failed_revoke_role";
case Error::rename_role: return "rename_role";
case Error::components_cant_acquire_service_implementation: return "components_cant_acquire_service_implementation";
case Error::components_cant_satisfy_dependency: return "components_cant_satisfy_dependency";
case Error::components_load_cant_register_service_implementation: return "components_load_cant_register_service_implementation";
case Error::components_load_cant_initialize: return "components_load_cant_initialize";
case Error::components_unload_not_loaded: return "components_unload_not_loaded";
case Error::components_unload_cant_deinitialize: return "components_unload_cant_deinitialize";
case Error::components_cant_release_service: return "components_cant_release_service";
case Error::components_unload_cant_unregister_service: return "components_unload_cant_unregister_service";
case Error::components_cant_unload: return "components_cant_unload";
case Error::warn_unload_the_not_persisted: return "warn_unload_the_not_persisted";
case Error::component_table_incorrect: return "component_table_incorrect";
case Error::component_manipulate_row_failed: return "component_manipulate_row_failed";
case Error::components_unload_duplicate_in_group: return "components_unload_duplicate_in_group";
case Error::cant_set_gtid_purged_due_sets_constraints: return "cant_set_gtid_purged_due_sets_constraints";
case Error::cannot_lock_user_management_caches: return "cannot_lock_user_management_caches";
case Error::srs_not_found: return "srs_not_found";
case Error::variable_not_persisted: return "variable_not_persisted";
case Error::is_query_invalid_clause: return "is_query_invalid_clause";
case Error::unable_to_store_statistics: return "unable_to_store_statistics";
case Error::no_system_schema_access: return "no_system_schema_access";
case Error::no_system_tablespace_access: return "no_system_tablespace_access";
case Error::no_system_table_access: return "no_system_table_access";
case Error::no_system_table_access_for_dictionary_table: return "no_system_table_access_for_dictionary_table";
case Error::no_system_table_access_for_system_table: return "no_system_table_access_for_system_table";
case Error::no_system_table_access_for_table: return "no_system_table_access_for_table";
case Error::invalid_option_key: return "invalid_option_key";
case Error::invalid_option_value: return "invalid_option_value";
case Error::invalid_option_key_value_pair: return "invalid_option_key_value_pair";
case Error::invalid_option_start_character: return "invalid_option_start_character";
case Error::invalid_option_end_character: return "invalid_option_end_character";
case Error::invalid_option_characters: return "invalid_option_characters";
case Error::duplicate_option_key: return "duplicate_option_key";
case Error::warn_srs_not_found_axis_order: return "warn_srs_not_found_axis_order";
case Error::no_access_to_native_fct: return "no_access_to_native_fct";
case Error::reset_master_to_value_out_of_range: return "reset_master_to_value_out_of_range";
case Error::unresolved_table_lock: return "unresolved_table_lock";
case Error::duplicate_table_lock: return "duplicate_table_lock";
case Error::binlog_unsafe_skip_locked: return "binlog_unsafe_skip_locked";
case Error::binlog_unsafe_nowait: return "binlog_unsafe_nowait";
case Error::lock_nowait: return "lock_nowait";
case Error::cte_recursive_requires_union: return "cte_recursive_requires_union";
case Error::cte_recursive_requires_nonrecursive_first: return "cte_recursive_requires_nonrecursive_first";
case Error::cte_recursive_forbids_aggregation: return "cte_recursive_forbids_aggregation";
case Error::cte_recursive_forbidden_join_order: return "cte_recursive_forbidden_join_order";
case Error::cte_recursive_requires_single_reference: return "cte_recursive_requires_single_reference";
case Error::switch_tmp_engine: return "switch_tmp_engine";
case Error::window_no_such_window: return "window_no_such_window";
case Error::window_circularity_in_window_graph: return "window_circularity_in_window_graph";
case Error::window_no_child_partitioning: return "window_no_child_partitioning";
case Error::window_no_inherit_frame: return "window_no_inherit_frame";
case Error::window_no_redefine_order_by: return "window_no_redefine_order_by";
case Error::window_frame_start_illegal: return "window_frame_start_illegal";
case Error::window_frame_end_illegal: return "window_frame_end_illegal";
case Error::window_frame_illegal: return "window_frame_illegal";
case Error::window_range_frame_order_type: return "window_range_frame_order_type";
case Error::window_range_frame_temporal_type: return "window_range_frame_temporal_type";
case Error::window_range_frame_numeric_type: return "window_range_frame_numeric_type";
case Error::window_range_bound_not_constant: return "window_range_bound_not_constant";
case Error::window_duplicate_name: return "window_duplicate_name";
case Error::window_illegal_order_by: return "window_illegal_order_by";
case Error::window_invalid_window_func_use: return "window_invalid_window_func_use";
case Error::window_invalid_window_func_alias_use: return "window_invalid_window_func_alias_use";
case Error::window_nested_window_func_use_in_window_spec: return "window_nested_window_func_use_in_window_spec";
case Error::window_rows_interval_use: return "window_rows_interval_use";
case Error::window_no_group_order_unused: return "window_no_group_order_unused";
case Error::window_explain_json: return "window_explain_json";
case Error::window_function_ignores_frame: return "window_function_ignores_frame";
case Error::wl9236_now_unused: return "wl9236_now_unused";
case Error::invalid_no_of_args: return "invalid_no_of_args";
case Error::field_in_grouping_not_group_by: return "field_in_grouping_not_group_by";
case Error::too_long_tablespace_comment: return "too_long_tablespace_comment";
case Error::engine_cant_drop_table: return "engine_cant_drop_table";
case Error::engine_cant_drop_missing_table: return "engine_cant_drop_missing_table";
case Error::tablespace_dup_filename: return "tablespace_dup_filename";
case Error::db_drop_rmdir2: return "db_drop_rmdir2";
case Error::imp_no_files_matched: return "imp_no_files_matched";
case Error::imp_schema_does_not_exist: return "imp_schema_does_not_exist";
case Error::imp_table_already_exists: return "imp_table_already_exists";
case Error::imp_incompatible_mysqld_version: return "imp_incompatible_mysqld_version";
case Error::imp_incompatible_dd_version: return "imp_incompatible_dd_version";
case Error::imp_incompatible_sdi_version: return "imp_incompatible_sdi_version";
case Error::warn_invalid_hint: return "warn_invalid_hint";
case Error::var_does_not_exist: return "var_does_not_exist";
case Error::longitude_out_of_range: return "longitude_out_of_range";
case Error::latitude_out_of_range: return "latitude_out_of_range";
case Error::not_implemented_for_geographic_srs: return "not_implemented_for_geographic_srs";
case Error::illegal_privilege_level: return "illegal_privilege_level";
case Error::no_system_view_access: return "no_system_view_access";
case Error::component_filter_flabbergasted: return "component_filter_flabbergasted";
case Error::part_expr_too_long: return "part_expr_too_long";
case Error::udf_drop_dynamically_registered: return "udf_drop_dynamically_registered";
case Error::unable_to_store_column_statistics: return "unable_to_store_column_statistics";
case Error::unable_to_update_column_statistics: return "unable_to_update_column_statistics";
case Error::unable_to_drop_column_statistics: return "unable_to_drop_column_statistics";
case Error::unable_to_build_histogram: return "unable_to_build_histogram";
case Error::mandatory_role: return "mandatory_role";
case Error::missing_tablespace_file: return "missing_tablespace_file";
case Error::persist_only_access_denied_error: return "persist_only_access_denied_error";
case Error::cmd_need_super: return "cmd_need_super";
case Error::path_in_datadir: return "path_in_datadir";
case Error::clone_ddl_in_progress: return "clone_ddl_in_progress";
case Error::clone_too_many_concurrent_clones: return "clone_too_many_concurrent_clones";
case Error::applier_log_event_validation_error: return "applier_log_event_validation_error";
case Error::cte_max_recursion_depth: return "cte_max_recursion_depth";
case Error::not_hint_updatable_variable: return "not_hint_updatable_variable";
case Error::credentials_contradict_to_history: return "credentials_contradict_to_history";
case Error::warning_password_history_clauses_void: return "warning_password_history_clauses_void";
case Error::client_does_not_support: return "client_does_not_support";
case Error::i_s_skipped_tablespace: return "i_s_skipped_tablespace";
case Error::tablespace_engine_mismatch: return "tablespace_engine_mismatch";
case Error::wrong_srid_for_column: return "wrong_srid_for_column";
case Error::cannot_alter_srid_due_to_index: return "cannot_alter_srid_due_to_index";
case Error::warn_binlog_partial_updates_disabled: return "warn_binlog_partial_updates_disabled";
case Error::warn_binlog_v1_row_events_disabled: return "warn_binlog_v1_row_events_disabled";
case Error::warn_binlog_partial_updates_suggests_partial_images: return "warn_binlog_partial_updates_suggests_partial_images";
case Error::could_not_apply_json_diff: return "could_not_apply_json_diff";
case Error::corrupted_json_diff: return "corrupted_json_diff";
case Error::resource_group_exists: return "resource_group_exists";
case Error::resource_group_not_exists: return "resource_group_not_exists";
case Error::invalid_vcpu_id: return "invalid_vcpu_id";
case Error::invalid_vcpu_range: return "invalid_vcpu_range";
case Error::invalid_thread_priority: return "invalid_thread_priority";
case Error::disallowed_operation: return "disallowed_operation";
case Error::resource_group_busy: return "resource_group_busy";
case Error::resource_group_disabled: return "resource_group_disabled";
case Error::feature_unsupported: return "feature_unsupported";
case Error::attribute_ignored: return "attribute_ignored";
case Error::invalid_thread_id: return "invalid_thread_id";
case Error::resource_group_bind_failed: return "resource_group_bind_failed";
case Error::invalid_use_of_force_option: return "invalid_use_of_force_option";
case Error::group_replication_command_failure: return "group_replication_command_failure";
case Error::sdi_operation_failed: return "sdi_operation_failed";
case Error::missing_json_table_value: return "missing_json_table_value";
case Error::wrong_json_table_value: return "wrong_json_table_value";
case Error::tf_must_have_alias: return "tf_must_have_alias";
case Error::tf_forbidden_join_type: return "tf_forbidden_join_type";
case Error::jt_value_out_of_range: return "jt_value_out_of_range";
case Error::jt_max_nested_path: return "jt_max_nested_path";
case Error::password_expiration_not_supported_by_auth_method: return "password_expiration_not_supported_by_auth_method";
case Error::invalid_geojson_crs_not_top_level: return "invalid_geojson_crs_not_top_level";
case Error::bad_null_error_not_ignored: return "bad_null_error_not_ignored";
case Error::disk_full_nowait: return "disk_full_nowait";
case Error::parse_error_in_digest_fn: return "parse_error_in_digest_fn";
case Error::undisclosed_parse_error_in_digest_fn: return "undisclosed_parse_error_in_digest_fn";
case Error::schema_dir_exists: return "schema_dir_exists";
case Error::schema_dir_missing: return "schema_dir_missing";
case Error::schema_dir_create_failed: return "schema_dir_create_failed";
case Error::schema_dir_unknown: return "schema_dir_unknown";
case Error::only_implemented_for_srid_0_and_4326: return "only_implemented_for_srid_0_and_4326";
case Error::binlog_expire_log_days_and_secs_used_together: return "binlog_expire_log_days_and_secs_used_together";
case Error::regexp_buffer_overflow: return "regexp_buffer_overflow";
case Error::regexp_illegal_argument: return "regexp_illegal_argument";
case Error::regexp_index_outofbounds_error: return "regexp_index_outofbounds_error";
case Error::regexp_internal_error: return "regexp_internal_error";
case Error::regexp_rule_syntax: return "regexp_rule_syntax";
case Error::regexp_bad_escape_sequence: return "regexp_bad_escape_sequence";
case Error::regexp_unimplemented: return "regexp_unimplemented";
case Error::regexp_mismatched_paren: return "regexp_mismatched_paren";
case Error::regexp_bad_interval: return "regexp_bad_interval";
case Error::regexp_max_lt_min: return "regexp_max_lt_min";
case Error::regexp_invalid_back_ref: return "regexp_invalid_back_ref";
case Error::regexp_look_behind_limit: return "regexp_look_behind_limit";
case Error::regexp_missing_close_bracket: return "regexp_missing_close_bracket";
case Error::regexp_invalid_range: return "regexp_invalid_range";
case Error::regexp_stack_overflow: return "regexp_stack_overflow";
case Error::regexp_time_out: return "regexp_time_out";
case Error::regexp_pattern_too_big: return "regexp_pattern_too_big";
case Error::cant_set_error_log_service: return "cant_set_error_log_service";
case Error::empty_pipeline_for_error_log_service: return "empty_pipeline_for_error_log_service";
case Error::component_filter_diagnostics: return "component_filter_diagnostics";
case Error::not_implemented_for_cartesian_srs: return "not_implemented_for_cartesian_srs";
case Error::not_implemented_for_projected_srs: return "not_implemented_for_projected_srs";
case Error::nonpositive_radius: return "nonpositive_radius";
case Error::restart_server_failed: return "restart_server_failed";
case Error::srs_missing_mandatory_attribute: return "srs_missing_mandatory_attribute";
case Error::srs_multiple_attribute_definitions: return "srs_multiple_attribute_definitions";
case Error::srs_name_cant_be_empty_or_whitespace: return "srs_name_cant_be_empty_or_whitespace";
case Error::srs_organization_cant_be_empty_or_whitespace: return "srs_organization_cant_be_empty_or_whitespace";
case Error::srs_id_already_exists: return "srs_id_already_exists";
case Error::warn_srs_id_already_exists: return "warn_srs_id_already_exists";
case Error::cant_modify_srid_0: return "cant_modify_srid_0";
case Error::warn_reserved_srid_range: return "warn_reserved_srid_range";
case Error::cant_modify_srs_used_by_column: return "cant_modify_srs_used_by_column";
case Error::srs_invalid_character_in_attribute: return "srs_invalid_character_in_attribute";
case Error::srs_attribute_string_too_long: return "srs_attribute_string_too_long";
case Error::deprecated_utf8_alias: return "deprecated_utf8_alias";
case Error::deprecated_national: return "deprecated_national";
case Error::invalid_default_utf8mb4_collation: return "invalid_default_utf8mb4_collation";
case Error::unable_to_collect_log_status: return "unable_to_collect_log_status";
case Error::reserved_tablespace_name: return "reserved_tablespace_name";
case Error::unable_to_set_option: return "unable_to_set_option";
case Error::slave_possibly_diverged_after_ddl: return "slave_possibly_diverged_after_ddl";
case Error::srs_not_geographic: return "srs_not_geographic";
case Error::polygon_too_large: return "polygon_too_large";
case Error::spatial_unique_index: return "spatial_unique_index";
case Error::index_type_not_supported_for_spatial_index: return "index_type_not_supported_for_spatial_index";
case Error::fk_cannot_drop_parent: return "fk_cannot_drop_parent";
case Error::geometry_param_longitude_out_of_range: return "geometry_param_longitude_out_of_range";
case Error::geometry_param_latitude_out_of_range: return "geometry_param_latitude_out_of_range";
case Error::fk_cannot_use_virtual_column: return "fk_cannot_use_virtual_column";
case Error::fk_no_column_parent: return "fk_no_column_parent";
case Error::cant_set_error_suppression_list: return "cant_set_error_suppression_list";
case Error::srs_geogcs_invalid_axes: return "srs_geogcs_invalid_axes";
case Error::srs_invalid_semi_major_axis: return "srs_invalid_semi_major_axis";
case Error::srs_invalid_inverse_flattening: return "srs_invalid_inverse_flattening";
case Error::srs_invalid_angular_unit: return "srs_invalid_angular_unit";
case Error::srs_invalid_prime_meridian: return "srs_invalid_prime_meridian";
case Error::transform_source_srs_not_supported: return "transform_source_srs_not_supported";
case Error::transform_target_srs_not_supported: return "transform_target_srs_not_supported";
case Error::transform_source_srs_missing_towgs84: return "transform_source_srs_missing_towgs84";
case Error::transform_target_srs_missing_towgs84: return "transform_target_srs_missing_towgs84";
case Error::temp_table_prevents_switch_session_binlog_format: return "temp_table_prevents_switch_session_binlog_format";
case Error::temp_table_prevents_switch_global_binlog_format: return "temp_table_prevents_switch_global_binlog_format";
case Error::running_applier_prevents_switch_global_binlog_format: return "running_applier_prevents_switch_global_binlog_format";
case Error::client_gtid_unsafe_create_drop_temp_table_in_trx_in_sbr: return "client_gtid_unsafe_create_drop_temp_table_in_trx_in_sbr";
case Error::table_without_pk: return "table_without_pk";
case Error::warn_data_truncated_functional_index: return "warn_data_truncated_functional_index";
case Error::warn_data_out_of_range_functional_index: return "warn_data_out_of_range_functional_index";
case Error::functional_index_on_json_or_geometry_function: return "functional_index_on_json_or_geometry_function";
case Error::functional_index_ref_auto_increment: return "functional_index_ref_auto_increment";
case Error::cannot_drop_column_functional_index: return "cannot_drop_column_functional_index";
case Error::functional_index_primary_key: return "functional_index_primary_key";
case Error::functional_index_on_lob: return "functional_index_on_lob";
case Error::functional_index_function_is_not_allowed: return "functional_index_function_is_not_allowed";
case Error::fulltext_functional_index: return "fulltext_functional_index";
case Error::spatial_functional_index: return "spatial_functional_index";
case Error::wrong_key_column_functional_index: return "wrong_key_column_functional_index";
case Error::functional_index_on_field: return "functional_index_on_field";
case Error::generated_column_named_function_is_not_allowed: return "generated_column_named_function_is_not_allowed";
case Error::generated_column_row_value: return "generated_column_row_value";
case Error::generated_column_variables: return "generated_column_variables";
case Error::dependent_by_default_generated_value: return "dependent_by_default_generated_value";
case Error::default_val_generated_non_prior: return "default_val_generated_non_prior";
case Error::default_val_generated_ref_auto_inc: return "default_val_generated_ref_auto_inc";
case Error::default_val_generated_function_is_not_allowed: return "default_val_generated_function_is_not_allowed";
case Error::default_val_generated_named_function_is_not_allowed: return "default_val_generated_named_function_is_not_allowed";
case Error::default_val_generated_row_value: return "default_val_generated_row_value";
case Error::default_val_generated_variables: return "default_val_generated_variables";
case Error::default_as_val_generated: return "default_as_val_generated";
case Error::unsupported_action_on_default_val_generated: return "unsupported_action_on_default_val_generated";
case Error::gtid_unsafe_alter_add_col_with_default_expression: return "gtid_unsafe_alter_add_col_with_default_expression";
case Error::fk_cannot_change_engine: return "fk_cannot_change_engine";
case Error::warn_deprecated_user_set_expr: return "warn_deprecated_user_set_expr";
case Error::warn_deprecated_utf8mb3_collation: return "warn_deprecated_utf8mb3_collation";
case Error::warn_deprecated_nested_comment_syntax: return "warn_deprecated_nested_comment_syntax";
case Error::fk_incompatible_columns: return "fk_incompatible_columns";
case Error::gr_hold_wait_timeout: return "gr_hold_wait_timeout";
case Error::gr_hold_killed: return "gr_hold_killed";
case Error::gr_hold_member_status_error: return "gr_hold_member_status_error";
case Error::rpl_encryption_failed_to_fetch_key: return "rpl_encryption_failed_to_fetch_key";
case Error::rpl_encryption_key_not_found: return "rpl_encryption_key_not_found";
case Error::rpl_encryption_keyring_invalid_key: return "rpl_encryption_keyring_invalid_key";
case Error::rpl_encryption_header_error: return "rpl_encryption_header_error";
case Error::rpl_encryption_failed_to_rotate_logs: return "rpl_encryption_failed_to_rotate_logs";
case Error::rpl_encryption_key_exists_unexpected: return "rpl_encryption_key_exists_unexpected";
case Error::rpl_encryption_failed_to_generate_key: return "rpl_encryption_failed_to_generate_key";
case Error::rpl_encryption_failed_to_store_key: return "rpl_encryption_failed_to_store_key";
case Error::rpl_encryption_failed_to_remove_key: return "rpl_encryption_failed_to_remove_key";
case Error::rpl_encryption_unable_to_change_option: return "rpl_encryption_unable_to_change_option";
case Error::rpl_encryption_master_key_recovery_failed: return "rpl_encryption_master_key_recovery_failed";
case Error::slow_log_mode_ignored_when_not_logging_to_file: return "slow_log_mode_ignored_when_not_logging_to_file";
case Error::grp_trx_consistency_not_allowed: return "grp_trx_consistency_not_allowed";
case Error::grp_trx_consistency_before: return "grp_trx_consistency_before";
case Error::grp_trx_consistency_after_on_trx_begin: return "grp_trx_consistency_after_on_trx_begin";
case Error::grp_trx_consistency_begin_not_allowed: return "grp_trx_consistency_begin_not_allowed";
case Error::functional_index_row_value_is_not_allowed: return "functional_index_row_value_is_not_allowed";
case Error::rpl_encryption_failed_to_encrypt: return "rpl_encryption_failed_to_encrypt";
case Error::page_tracking_not_started: return "page_tracking_not_started";
case Error::page_tracking_range_not_tracked: return "page_tracking_range_not_tracked";
case Error::page_tracking_cannot_purge: return "page_tracking_cannot_purge";
case Error::rpl_encryption_cannot_rotate_binlog_master_key: return "rpl_encryption_cannot_rotate_binlog_master_key";
case Error::binlog_master_key_recovery_out_of_combination: return "binlog_master_key_recovery_out_of_combination";
case Error::binlog_master_key_rotation_fail_to_operate_key: return "binlog_master_key_rotation_fail_to_operate_key";
case Error::binlog_master_key_rotation_fail_to_rotate_logs: return "binlog_master_key_rotation_fail_to_rotate_logs";
case Error::binlog_master_key_rotation_fail_to_reencrypt_log: return "binlog_master_key_rotation_fail_to_reencrypt_log";
case Error::binlog_master_key_rotation_fail_to_cleanup_unused_keys: return "binlog_master_key_rotation_fail_to_cleanup_unused_keys";
case Error::binlog_master_key_rotation_fail_to_cleanup_aux_key: return "binlog_master_key_rotation_fail_to_cleanup_aux_key";
case Error::non_boolean_expr_for_check_constraint: return "non_boolean_expr_for_check_constraint";
case Error::column_check_constraint_references_other_column: return "column_check_constraint_references_other_column";
case Error::check_constraint_named_function_is_not_allowed: return "check_constraint_named_function_is_not_allowed";
case Error::check_constraint_function_is_not_allowed: return "check_constraint_function_is_not_allowed";
case Error::check_constraint_variables: return "check_constraint_variables";
case Error::check_constraint_row_value: return "check_constraint_row_value";
case Error::check_constraint_refers_auto_increment_column: return "check_constraint_refers_auto_increment_column";
case Error::check_constraint_violated: return "check_constraint_violated";
case Error::check_constraint_refers_unknown_column: return "check_constraint_refers_unknown_column";
case Error::check_constraint_not_found: return "check_constraint_not_found";
case Error::check_constraint_dup_name: return "check_constraint_dup_name";
case Error::check_constraint_clause_using_fk_refer_action_column: return "check_constraint_clause_using_fk_refer_action_column";
case Error::invalid_encryption_request: return "invalid_encryption_request";
case Error::cannot_set_table_encryption: return "cannot_set_table_encryption";
case Error::cannot_set_database_encryption: return "cannot_set_database_encryption";
case Error::cannot_set_tablespace_encryption: return "cannot_set_tablespace_encryption";
case Error::tablespace_cannot_be_encrypted: return "tablespace_cannot_be_encrypted";
case Error::tablespace_cannot_be_decrypted: return "tablespace_cannot_be_decrypted";
case Error::tablespace_type_unknown: return "tablespace_type_unknown";
case Error::target_tablespace_unencrypted: return "target_tablespace_unencrypted";
case Error::cannot_use_encryption_clause: return "cannot_use_encryption_clause";
case Error::invalid_multiple_clauses: return "invalid_multiple_clauses";
case Error::unsupported_use_of_grant_as: return "unsupported_use_of_grant_as";
case Error::uknown_auth_id_or_access_denied_for_grant_as: return "uknown_auth_id_or_access_denied_for_grant_as";
case Error::dependent_by_functional_index: return "dependent_by_functional_index";
case Error::plugin_not_early: return "plugin_not_early";
case Error::innodb_redo_log_archive_start_subdir_path: return "innodb_redo_log_archive_start_subdir_path";
case Error::innodb_redo_log_archive_start_timeout: return "innodb_redo_log_archive_start_timeout";
case Error::innodb_redo_log_archive_dirs_invalid: return "innodb_redo_log_archive_dirs_invalid";
case Error::innodb_redo_log_archive_label_not_found: return "innodb_redo_log_archive_label_not_found";
case Error::innodb_redo_log_archive_dir_empty: return "innodb_redo_log_archive_dir_empty";
case Error::innodb_redo_log_archive_no_such_dir: return "innodb_redo_log_archive_no_such_dir";
case Error::innodb_redo_log_archive_dir_clash: return "innodb_redo_log_archive_dir_clash";
case Error::innodb_redo_log_archive_dir_permissions: return "innodb_redo_log_archive_dir_permissions";
case Error::innodb_redo_log_archive_file_create: return "innodb_redo_log_archive_file_create";
case Error::innodb_redo_log_archive_active: return "innodb_redo_log_archive_active";
case Error::innodb_redo_log_archive_inactive: return "innodb_redo_log_archive_inactive";
case Error::innodb_redo_log_archive_failed: return "innodb_redo_log_archive_failed";
case Error::innodb_redo_log_archive_session: return "innodb_redo_log_archive_session";
case Error::std_regex_error: return "std_regex_error";
case Error::invalid_json_type: return "invalid_json_type";
case Error::cannot_convert_string: return "cannot_convert_string";
case Error::dependent_by_partition_func: return "dependent_by_partition_func";
case Error::warn_deprecated_float_auto_increment: return "warn_deprecated_float_auto_increment";
case Error::rpl_cant_stop_slave_while_locked_backup: return "rpl_cant_stop_slave_while_locked_backup";
case Error::warn_deprecated_float_digits: return "warn_deprecated_float_digits";
case Error::warn_deprecated_float_unsigned: return "warn_deprecated_float_unsigned";
case Error::warn_deprecated_integer_display_width: return "warn_deprecated_integer_display_width";
case Error::warn_deprecated_zerofill: return "warn_deprecated_zerofill";
case Error::clone_donor: return "clone_donor";
case Error::clone_protocol: return "clone_protocol";
case Error::clone_donor_version: return "clone_donor_version";
case Error::clone_os: return "clone_os";
case Error::clone_platform: return "clone_platform";
case Error::clone_charset: return "clone_charset";
case Error::clone_config: return "clone_config";
case Error::clone_sys_config: return "clone_sys_config";
case Error::clone_plugin_match: return "clone_plugin_match";
case Error::clone_loopback: return "clone_loopback";
case Error::clone_encryption: return "clone_encryption";
case Error::clone_disk_space: return "clone_disk_space";
case Error::clone_in_progress: return "clone_in_progress";
case Error::clone_disallowed: return "clone_disallowed";
case Error::cannot_grant_roles_to_anonymous_user: return "cannot_grant_roles_to_anonymous_user";
case Error::secondary_engine_plugin: return "secondary_engine_plugin";
case Error::second_password_cannot_be_empty: return "second_password_cannot_be_empty";
case Error::db_access_denied: return "db_access_denied";
case Error::da_auth_id_with_system_user_priv_in_mandatory_roles: return "da_auth_id_with_system_user_priv_in_mandatory_roles";
case Error::da_rpl_gtid_table_cannot_open: return "da_rpl_gtid_table_cannot_open";
case Error::geometry_in_unknown_length_unit: return "geometry_in_unknown_length_unit";
case Error::da_plugin_install_error: return "da_plugin_install_error";
case Error::no_session_temp: return "no_session_temp";
case Error::da_unknown_error_number: return "da_unknown_error_number";
case Error::column_change_size: return "column_change_size";
case Error::regexp_invalid_capture_group_name: return "regexp_invalid_capture_group_name";
case Error::da_ssl_library_error: return "da_ssl_library_error";
case Error::secondary_engine: return "secondary_engine";
case Error::secondary_engine_ddl: return "secondary_engine_ddl";
case Error::incorrect_current_password: return "incorrect_current_password";
case Error::missing_current_password: return "missing_current_password";
case Error::current_password_not_required: return "current_password_not_required";
case Error::password_cannot_be_retained_on_plugin_change: return "password_cannot_be_retained_on_plugin_change";
case Error::current_password_cannot_be_retained: return "current_password_cannot_be_retained";
case Error::partial_revokes_exist: return "partial_revokes_exist";
case Error::cannot_grant_system_priv_to_mandatory_role: return "cannot_grant_system_priv_to_mandatory_role";
case Error::xa_replication_filters: return "xa_replication_filters";
case Error::unsupported_sql_mode: return "unsupported_sql_mode";
case Error::regexp_invalid_flag: return "regexp_invalid_flag";
case Error::partial_revoke_and_db_grant_both_exists: return "partial_revoke_and_db_grant_both_exists";
case Error::unit_not_found: return "unit_not_found";
case Error::invalid_json_value_for_func_index: return "invalid_json_value_for_func_index";
case Error::json_value_out_of_range_for_func_index: return "json_value_out_of_range_for_func_index";
case Error::exceeded_mv_keys_num: return "exceeded_mv_keys_num";
case Error::exceeded_mv_keys_space: return "exceeded_mv_keys_space";
case Error::functional_index_data_is_too_long: return "functional_index_data_is_too_long";
case Error::wrong_mvi_value: return "wrong_mvi_value";
case Error::warn_func_index_not_applicable: return "warn_func_index_not_applicable";
case Error::grp_rpl_udf_error: return "grp_rpl_udf_error";
case Error::update_gtid_purged_with_gr: return "update_gtid_purged_with_gr";
case Error::grouping_on_timestamp_in_dst: return "grouping_on_timestamp_in_dst";
case Error::table_name_causes_too_long_path: return "table_name_causes_too_long_path";
case Error::audit_log_insufficient_privilege: return "audit_log_insufficient_privilege";
case Error::da_grp_rpl_started_auto_rejoin: return "da_grp_rpl_started_auto_rejoin";

#endif